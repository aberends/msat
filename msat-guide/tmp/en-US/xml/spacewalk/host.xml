<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../msat-guide.ent">
%BOOK_ENTITIES;
]>
<section id="spacewalk-host" lang="en-US">
	<title>KVM host configuration</title>
	 <table id="tabl-msat-guide-KVM_host_configuration-Time_needed">
		<title>Time needed</title>
		 <tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colnum="1" colwidth="1*"></colspec>
			 <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
			 <thead valign="top">
				<row>
					<entry>
						action
					</entry>
					 <entry>
						time
					</entry>

				</row>

			</thead>
			 <tbody valign="top">
				<row>
					<entry>
						virtual network creation
					</entry>
					 <entry>
						10 minutes
					</entry>

				</row>
				 <row>
					<entry>
						storage creation
					</entry>
					 <entry>
						10 minutes
					</entry>

				</row>
				 <row>
					<entry>
						memory verification
					</entry>
					 <entry>
						3 minutes
					</entry>

				</row>

			</tbody>

		</tgroup>

	</table>
	 <para>
		In this section we discuss what needs to be done on the host system. For the Spacewalk KVM, we need: 
		<itemizedlist>
			<listitem>
				<para>
					A virtual network in which we let the Spacewalk server operate. In this network, we also add our test machine. This is the machine on which we test the provisioning.
				</para>

			</listitem>
			 <listitem>
				<para>
					Disk storage. Eventually we want to have CentOS 5 and 6 content including all the minor versions. Furthermore, we want to have some space available for making exports and imports when the occasion arises. So 300GB should suffice.
				</para>

			</listitem>
			 <listitem>
				<para>
					Memory for the virutal CPU. At least 2GB is needed. To give the Spacewalk server some power we use 4GB.
				</para>

			</listitem>

		</itemizedlist>

	</para>
	 <section id="spacewalk-host-network">
		<title>Virtual network</title>
		 <para>
			We assume that most people use <systemitem class="ipaddress">192.168.1.0/24</systemitem> as their home network. Since we don't want to interfere, we use <systemitem class="ipaddress">192.168.5.0/24</systemitem>. This is a virtual network that needs to be created on the host. For more background information look at <ulink url="http://libvirt.org/formatnetwork.html">libvirt.org/formatnetwork.html</ulink>.
		</para>
		 <note>
			<title>KVM virtualization must work on host</title>
			 <para>
				We assume that on the Linux host system KVM virtualization is working. If this is not the case, please make sure it works first. The <systemitem class="daemon">libvirtd</systemitem> service must run. For more information, refer to <ulink url="http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html-single/Virtualization_Administration_Guide/index.html">Virtualization Administration Guide</ulink>.
			</para>

		</note>
		 <para>
			The virtual network can be created via the <command>virsh</command> command line tool. Another way is the <command>virt-manager</command> graphical tool. We first show how to use the command line tool, and then the graphical tool.
		</para>
		 <para>
			We have the following XML file: 
<screen>
&srvprompt; <userinput>cat dmsat1.xml</userinput>
&lt;network&gt;
  &lt;name&gt;dmsat1&lt;/name&gt;
  &lt;forward mode='nat'/&gt;
  &lt;bridge name='virbr1' stp='on' delay='0'/&gt;
  &lt;mac address='52:54:00:A8:05:01'/&gt;
  &lt;domain name='dmsat1.org'/&gt;
  &lt;ip address='192.168.5.1' netmask='255.255.255.0'/&gt;
&lt;/network&gt;
</screen>

		</para>
		 <para>
			Note that the above MAC address, <systemitem class="etheraddress">52:54:00:A8:05:01</systemitem>, is build up from the rules: 
			<itemizedlist>
				<listitem>
					<para>
						<emphasis role="bold">52:54:00</emphasis>, which is fixed by definition. See the section <emphasis role="bold">Network Configuration</emphasis> of "man virt-install".
					</para>

				</listitem>
				 <listitem>
					<para>
						<emphasis role="bold">A8:05:01</emphasis>, which is the last 3 parts of <systemitem class="ipaddress">192.168.5.1</systemitem> in hexadecimal.
					</para>

				</listitem>

			</itemizedlist>

		</para>
		 <para>
			Now, create the network, mark it as autostart and activate it, with: 
<screen>
&srvprompt; <userinput>virsh net-define dmsat1.xml</userinput>
Network dmsat1 defined from test.xml

&srvprompt; <userinput>virsh net-autostart dmsat1</userinput>
Network dmsat1 marked as autostarted

&srvprompt; <userinput>virsh net-start dmsat1</userinput>
Network dmsat1 started

</screen>

		</para>
		 <para>
			The command line method above, requires that one knows what must be specified in the XML file. Another way is to use the GUI, the <command>virt-manager</command> command. Use the following clickpath: <menuchoice><guimenu>Edit</guimenu> <guimenuitem>Connection Details</guimenuitem></menuchoice>. The <guilabel>Connetion Details</guilabel> window pops up. In here, click: <menuchoice><guimenu>Virtual Networks</guimenu> <guimenuitem>+ button</guimenuitem> </menuchoice>. The <guilabel>Create a new virtual network</guilabel> dialog pops up. Press <guibutton>Forward</guibutton>. Enter <userinput>dmsat1</userinput> in the <guilabel>Network Name:</guilabel> dialog box. Press <guibutton>Forward</guibutton> again. The <guilabel>Network:</guilabel> is <userinput>192.168.5.0/24</userinput>. Since, we don't use DHCP, unvink the <guilabel>Enable DHCP:</guilabel> box. Press <guibutton>Forward</guibutton>. Select the <guilabel>Forwarding to physical network</guilabel> radio button. The <guilabel>Destination:</guilabel> should be <userinput>Any physical device</userinput> and the <guilabel>Mode:</guilabel> should be <userinput>NAT</userinput>. Press <guibutton>Forward</guibutton> and then <guibutton>Finish</guibutton>.
		</para>
		 <para>
			Note that via the GUI method, one does not have the option of setting the MAC address to a specific value, like <systemitem class="etheraddress">52:54:00:A8:05:01</systemitem>. Consequently, we prefer the command line method to create the virtual network.
		</para>
		 <para>
			We assume that the newly created network is the second network after the <code>default</code> network. Hence, it is connected to the <code>virbr1</code> device. The network is defined in an XML file in <filename class="directory">/etc/libvirt/qemu/networks</filename>, named <filename>dmsat1.xml</filename>. It can be shown with: 
<screen>
&srvprompt; <userinput>virsh net-dumpxml dmsat1</userinput>
&lt;network&gt;
  &lt;name&gt;dmsat1&lt;/name&gt;
  &lt;forward mode='nat'/&gt;
  &lt;bridge name='virbr1' stp='on' delay='0'/&gt;
  &lt;mac address='52:54:00:A8:05:01'/&gt;
  &lt;domain name='dmsat1.org'/&gt;
  &lt;ip address='192.168.5.1' netmask='255.255.255.0'/&gt;
&lt;/network&gt;
</screen>

		</para>
		 <para>
			Make sure that the network is active and that it auto-starts: 
<screen>
&srvprompt; <userinput>virsh net-list</userinput>
Name                 State      Autostart
-----------------------------------------
default              active     yes       
dmsat1               active     yes

</screen>

		</para>

	</section>
	
	 <section id="spacewalk-host-storage">
		<title>Storage setup</title>
		 <para>
			The KVM Spacewalk server needs disk space to run on. We provide it by means of a LV (Logical Volume) created on the host. The creation is done as follows: 
<screen>
&srvprompt; <userinput>pvs</userinput>
  PV         VG        Fmt  Attr PSize   PFree
  /dev/sda3  vg_server lvm2 a--  931.00g      0
  /dev/sdb   b         lvm2 a--  931.51g 931.51g
  /dev/sdc   c         lvm2 a--  931.51g 931.51g
  /dev/sdd   d         lvm2 a--  931.51g 931.51g
  /dev/sde   e         lvm2 a--  931.51g 931.51g
  /dev/sdf   f         lvm2 a--  931.51g 931.51g

&srvprompt; <userinput>pvs -o +vg_extent_size /dev/sdb</userinput>
  PV         VG   Fmt  Attr PSize   PFree   Ext
  /dev/sdb   b    lvm2 a--  931.51g 931.51g 4.00m

&srvprompt; <userinput>lvcreate -n sw -l $((25 * 10 * 300)) b</userinput>
  Logical volume "sw" created

</screen>

		</para>
		 <para>
			The newly created LV, <filename class="devicefile">/dev/b/sw</filename>, can now be presented to the virtual machine creation command as block device for storage.
		</para>

	</section>
	
	 <section id="spacewalk-host-memory">
		<title>Memory setup</title>
		 <para>
			From the information of the Spacewalk project, see <ulink url="https://fedorahosted.org/spacewalk">fedorahosted.org/spacewalk</ulink>, we know from the <emphasis role="bold">Spacewalk Installation Instructions</emphasis>, from a Prerequisites section that the minimum amount of RAM needed, is 2GB, but that 4GB is recommended. We know that on our host this requirement is no problem. We have 16GB of internal memory, which can be demonstrated with: 
<screen>
&srvprompt; <userinput>cat /proc/meminfo | grep ^MemTotal</userinput>
MemTotal:       16435452 kB
</screen>

		</para>

	</section>
	

</section>


