<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../msat-guide.ent">
%BOOK_ENTITIES;
]>
<section id="msat-guide-software-ds_install">
  <title>Directory software installation</title>
  <table id="msat-guide-software-ds_install-time">
    <title>Time needed</title>
    <tgroup align="left" cols="2" colsep="1" rowsep="1">
      <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
      <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
      <thead valign="top">
        <row>
          <entry>action</entry>
          <entry>time</entry>
        </row>
      </thead>
      <tbody valign="top">
        <row>
          <entry>Config channel</entry>
          <entry>5 minutes</entry>
        </row>
        <row>
          <entry>Activation key</entry>
          <entry>5 minutes</entry>
        </row>
        <row>
          <entry>Kickstart profile</entry>
          <entry>20 minutes</entry>
        </row>
        <row>
          <entry>Cobbler</entry>
          <entry>5 minutes</entry>
        </row>
        <row>
          <entry>Test installation</entry>
          <entry>15 minutes</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <para>
    To install the directory server, we need the following
    items: 
    <itemizedlist>
      <listitem>
        <para>
          A configuration channel with configuration files
          to specify how we want the directory server to be
          configured.
        </para>
      </listitem>
      <listitem>
        <para>
          An activation key with at least one RPM and a link
          to the configuration channel.
        </para>
      </listitem>
      <listitem>
        <para>
          A kickstart profile with a link to the activation
          key and 1 post install script.
        </para>
      </listitem>
      <listitem>
        <para>
          A Cobbler system and the Cobbler boot ISO.
        </para>
      </listitem>
      <listitem>
        <para>
          The environment on the host to create a KVM virtual machine.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <section id="software-ds-cc">
    <title>Config Channel</title>
     <para>
       Initially our config channel is empty, but we add 1
       file, <filename>/root/ds-install.inf</filename>,
       which is empty. Later, after tweaking with the manual
       install, this file is the information for the silent
       installer.
     </para>
  </section>
  
  <section id="software-ds-ak">
    <title>Activation Key</title>
    <para>
      The activation key has the following tasks:
      <itemizedlist>
        <listitem>
          <para>
            Connect to software channels, which show up as
            yum repositories on the target system. These can
            be shown with <command>yum repolist</command>.
          </para>
        </listitem>
        <listitem>
          <para>
            Install RPM's from the subscribed software
            channels.
          </para>
        </listitem>
        <listitem>
          <para>
            Make configuration channels available to the
            target systems that activates the activation
            key.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>
  
  <section id="software-ds-kp">
    <title>Kickstart Profile</title>
    <para>
    </para>
  </section>
  
  <section id="software-ds-cob">
    <title>Cobbler</title>
    <para>
      Since we want to start our bare metal provisioning
      with a boot ISO, we need to create a system in
      Cobbler. This task can be accomplished by using a
      script. We present it here: 
      <screen>
&sw1p; <userinput>cat /root/cobbler-ds1.sh</userinput>
#!/bin/bash
#
# SCRIPT
#   cobbler-ds1.sh
# DESCRIPTION
#   This script should be run on the Spacewalk server:
#   # ./cobbler-ds1.sh
#
#   IP details
#
#   Host       Prod            Cluster        ILO
#   ds1        192.168.5.100   -              -
#
#   Subnets:
#   192.168.5.0/24  gw: 192.168.5.1
#
#   DNS servers:
#   * 192.168.5.11 (d19sw1.dmsat1.org)
#
# ARGUMENTS
#   None.
# RETURN
#   Value from cobbler command. See cobbler man page.
# DEPENDENCIES
#   The profile should not yet exist in cobbler. If it does,
#   remove it with:
#   sudo cobbler system remove \
#     --name=SpacewalkDefaultOrganization_kvm_ds1
#   Adding an existing profile results in a clear warning
#   from cobbler. No harm is done.
# FAILURE
# AUTHORS
#   Date strings made with 'date +"\%Y-\%m-\%d \%H:\%M"'.
#   Allard Berends (AB), 2013-06-07 00:30
# HISTORY
# LICENSE
#   Copyright (C) 2013 Allard Berends
# 
#   cobbler-ds1.sh is free software; you can
#   redistribute it and/or modify it under the terms of the
#   GNU General Public License as published by the Free
#   Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   cobbler-ds1.sh is distributed in the hope
#   that it will be useful, but WITHOUT ANY WARRANTY;
#   without even the implied warranty of MERCHANTABILITY or
#   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
#   Public License for more details.
#
#   You should have received a copy of the GNU General
#   Public License along with this program; if not, write to
#   the Free Software Foundation, Inc., 59 Temple Place -
#   Suite 330, Boston, MA 02111-1307, USA.
# DESIGN
#

COBBLER="sudo cobbler"
# AB: non base Spacewalk organizations have orgnum != 1
#ORGNUM=$(msat_ls_org.py)
ORGNUM=1

########## PARAMETERS TO EDIT ##########
NAME="ds1"
OWNERS="example"
MACH="kvm"
PROFILE="ds-kvm-5u8-1_0"
ORG="SpacewalkDefaultOrganization"
COMMENT="empty"
GATEWAY=192.168.5.1
NAMESERVERS="192.168.5.11"
NAMESERVERS_SEARCH="dmsat1.org"
HOSTNAME=${NAME}.${NAMESERVERS_SEARCH}
PROD_IP=192.168.5.14
PROD_SUBNET=255.255.255.0
PROD_DNS_NAME=${HOSTNAME}
MAC_ETH0=52:54:00:a8:05:0e

########## START SCRIPT ##########
$COBBLER system add \
  --name=${ORG}_${MACH}_${NAME} \
  --owners=${OWNERS} \
  --profile=${PROFILE}:${ORGNUM}:${ORG} \
  --kopts="ksdevice=${MAC_ETH0} ip=${PROD_IP} netmask=${PROD_SUBNET}" \
  --netboot-enabled=0 \
  --comment=${COMMENT} \
  --power-type=ipmitool \
  --hostname=${HOSTNAME} \
  --gateway=${GATEWAY} \
  --name-servers="$NAMESERVERS" \
  --name-servers-search=$NAMESERVERS_SEARCH \
  --redhat-management-key='&lt;&lt;inherit&gt;&gt;' \
  --redhat-management-server='&lt;&lt;inherit&gt;&gt;'
  #--uid=UID
  #--image=IMAGE
  #--kopts-post=KOPTS_POST
  #--ksmeta=KSMETA
  #--kickstart=KICKSTART
  #--depth=DEPTH
  #--server=SERVER
  #--virt-path=VIRT_PATH
  #--virt-type=VIRT_TYPE
  #--virt-cpus=VIRT_CPUS
  #--virt-file-size=VIRT_FILE_SIZE
  #--virt-ram=VIRT_RAM
  #--virt-auto-boot=VIRT_AUTO_BOOT
  #--ctime=CTIME
  #--mtime=MTIME
  #--power-address=POWER_ADDRESS
  #--power-user=POWER_USER
  #--power-pass=POWER_PASS
  #--power-id=POWER_ID
  #--ipv6-default-device=IPV6_DEFAULT_DEVICE
  #--ipv6-autoconfiguration=IPV6_AUTOCONFIGURATION
  #--mgmt-classes=MGMT_CLASSES
  #--template-files=TEMPLATE_FILES
  #--template-remote-kickstarts=TEMPLATE_REMOTE_KICKSTARTS
  #--clobber
  #--template-files=TEMPLATE_FILES
  #--in-place

/usr/bin/cobbler system edit \
  --name=${ORG}_${MACH}_${NAME} \
  --mac-address=${MAC_ETH0} \
  --ip-address=${PROD_IP} \
  --static=1 \
  --subnet=${PROD_SUBNET} \
  --dns-name=${PROD_DNS_NAME} \
  --interface=eth0
  #--mtu=MTU
  #--dhcp-tag=DHCP_TAG
  #--static-routes=STATIC_ROUTES
  #--virt-bridge=VIRT_BRIDGE
  #--ipv6-address=IPV6_ADDRESS
  #--ipv6-secondaries=IPV6_SECONDARIES
  #--ipv6-mtu=IPV6_MTU
  #--ipv6-static-routes=IPV6_STATIC_ROUTES
  #--ipv6-default-gateway=IPV6_DEFAULT_GATEWAY
      </screen>
    </para>
    <para>
      We run the above script and verify that the system is
      known in Cobbler: 
      <screen>
&sw1p; <userinput>chmod u+x cobbler-ds1.sh</userinput>
&sw1p; <userinput>./cobbler-ds1.sh</userinput>
&sw1p; <userinput>sudo cobbler system list | grep ds1</userinput>
   SpacewalkDefaultOrganization_kvm_ds1
      </screen>
    </para>
    <para>
      We create the Cobbler boot ISO with: 
      <screen>
&sw1p; <userinput>sudo cobbler buildiso --iso=/var/www/cobbler/pub/example/centos5u8-ds-kvm.iso --profiles="" --systems="SpacewalkDefaultOrganization_kvm_ds1" --tempdir=/tmp</userinput>
task started: 2013-06-07_000320_buildiso
task started (id=Build Iso, time=Fri Jun  7 00:03:20 2013)
using/creating buildisodir: /tmp/buildiso
building tree for isolinux
copying miscellaneous files
copying kernels and initrds for profiles
copying kernels and initrds for systems
generating a isolinux.cfg
generating profile list
generating system list
 - ksdevice 52:54:00:a8:05:0e set for system SpacewalkDefaultOrganization_kvm_ds1
append line length is greater than 254 chars: (272 chars)
done writing config
running: mkisofs -o /var/www/cobbler/pub/example/centos5u8-ds-kvm.iso -r -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -V Cobbler\ Install -R -J -T /tmp/buildiso
received on stdout: 
received on stderr: I: -input-charset not specified, using utf-8 (detected in locale settings)
Size of boot image is 4 sectors -&gt; No emulation
 68.62% done, estimate finish Fri Jun  7 00:03:21 2013
Total translation table size: 4029
Total rockridge attributes bytes: 1320
Total directory bytes: 4096
Path table size(bytes): 40
Max brk space used 1c000
7301 extents written (14 MB)

ISO build complete
You may wish to delete: /tmp/buildiso
The output file is: /var/www/cobbler/pub/example/centos5u8-ds-kvm.iso
*** TASK COMPLETE ***
&sw1p; <userinput>ls -lh /var/www/cobbler/pub/example/centos5u8-ds-kvm.iso</userinput>
-rw-r--r--. 1 root root 15M Jun  7 00:03 /var/www/cobbler/pub/example/centos5u8-ds-kvm.iso
&sw1p; <userinput>scp /var/www/cobbler/pub/example/centos5u8-ds-kvm.iso root@192.168.5.1:/tmp</userinput>
      </screen>
    </para>
  </section>
  
  <section id="software-ds-kvm">
    <title>KVM installation</title>
    <para>
      On the host machine we need to create storage space for our test machine: 
      <screen>
&hostp; <userinput>pvs</userinput>
  PV         VG        Fmt  Attr PSize   PFree
  /dev/sda3  vg_server lvm2 a--  931.00g      0
  /dev/sdb   b         lvm2 a--  931.51g 638.54g
  /dev/sdc   c         lvm2 a--  931.51g 931.51g
  /dev/sdd   d         lvm2 a--  931.51g 931.51g
  /dev/sde   e         lvm2 a--  931.51g 926.63g
  /dev/sdf   f         lvm2 a--  931.51g 931.51g

&hostp; <userinput>pvs -o +vg_extent_size /dev/sde</userinput>
  PV         VG   Fmt  Attr PSize   PFree   Ext
  /dev/sde   e    lvm2 a--  931.51g 931.51g 4.00m

&hostp; <userinput>lvcreate -n ds1 -l $((25 * 10 * 5)) e</userinput>
  Logical volume "ds1" created

      </screen>
    </para>
    <para>
      Explanation of the parameters in the
      <command>virt-install</command> command: 
      <itemizedlist>
        <listitem>
          <para>
            ds1, ds (directory server), 1 (number 1).
          </para>
        </listitem>
        <listitem>
          <para>
            mac=52:54:00:a8:05:0e, 192.168.5.14 -&gt;
            00:a8:05:0e, the 52:54:00 is obligatory by
            libvirt definition.
          </para>
        </listitem>
      </itemizedlist>
      To make it easy to verify the
      <command>virt-install</command> options in the
      <emphasis>virt-install man page</emphasis>, we specify
      them in the same order as they appear in the man page.
    </para>
    <para>
      The installation is started with: 
      <screen>
&hostp; <userinput>virt-install \</userinput>
  <userinput>--connect qemu:///system \</userinput>
  <userinput>--name=ds1 \</userinput>
  <userinput>--ram=512 \</userinput>
  <userinput>--arch=x86_64 \</userinput>
  <userinput>--description="Directory Server 1" \</userinput>
  <userinput>--cdrom /tmp/centos5u8-ds-kvm.iso \</userinput>
  <userinput>--os-type=linux \</userinput>
  <userinput>--os-variant=rhel5.4 \</userinput>
  <userinput>--disk path=/dev/e/ds1,device=disk,bus=scsi \</userinput>
  <userinput>--network=network=dmsat1,mac=52:54:00:a8:05:0e \</userinput>
  <userinput>--graphics vnc \</userinput>
  <userinput>--hvm \</userinput>
  <userinput>--autostart</userinput>
.. output skipped, about 10 minutes ..
      </screen>
      Select <emphasis
      role="bold">SpacewalkDefaultOrganization_kvm_ds1</emphasis>
      and press <keycap function="enter">Enter</keycap>.
    </para>
    <para>
      To check on the installed system if everything is
      working fine, one does: 
      <screen>
&t1p; rhncfg-client list
Using server name d19sw1.dmsat1.org
DoFoS   Config Channel   File
F         ds-5-1_0     /etc/motd
&t1p; yum repolist
Loaded plugins: fastestmirror, rhnplugin, security
This system is receiving updates from RHN Classic or RHN Satellite.
Loading mirror speeds from cached hostfile
repo id                              repo name                            status
centos-x86_64-server-5               centos-x86_64-server-5               3,602
centos-x86_64-server-extras-5        centos-x86_64-server-extras-5          279
con-tools-centos-x86_64-server-5     con-tools-centos-x86_64-server-5        16
repolist: 3,897
      </screen>
    </para>
  </section>

  <section id="msat-guide-software-test-ds">
    <title>Directory Server installation</title>
    <para>
      After the installation of the base OS, we install the
      Directory server software:
      <screen>
&ds1p; <userinput>wc -l /var/log/yum.log</userinput>
0 /var/log/yum.log
&ds1p; <userinput>yum install centos-ds</userinput>
.
.
Transaction Summary
================================================================================
Install      33 Package(s)
Upgrade       0 Package(s)

Total download size: 71 M
Is this ok [y/N]: <userinput>y &lt;enter&gt;</userinput>
.
.
      </screen>
    </para>

    <para>
      In order to be able to repeat the installation, we
      look at the <filename>/var/log/yum.log</filename> file
      to find out which RPM's are installed. We can
      deinstall them with:
      <screen>
&ds1p; <userinput>awk '{print $NF}' /var/log/yum.log | tr '\n' ' ' > /tmp/deinstall</userinput>
&ds1p; <userinput>yum remove $(cat /tmp/deinstall)</userinput>
.
.
Transaction Summary
================================================================================
Remove       33 Package(s)
Reinstall     0 Package(s)
Downgrade     0 Package(s)

Is this ok [y/N]: <userinput>y &lt;enter&gt;</userinput>
.
.
      </screen>
    </para>

    <para>
      Next, we want to install directory server instances,
      the <emphasis role="bold">admin server</emphasis> and
      <emphasis role="bold">directory server</emphasis>. The
      installation is done by
      <command>/usr/sbin/setup-ds-admin.pl</command>. We
      show it here:
      <screen>
&ds1p; <userinput>/usr/sbin/setup-ds-admin.pl --keepcache</userinput>
==============================================================================
This program will set up the CentOS Directory and Administration Servers.

It is recommended that you have "root" privilege to set up the software.
Tips for using this program:
  - Press "Enter" to choose the default and go to the next screen
  - Type "Control-B" then "Enter" to go back to the previous screen
  - Type "Control-C" to cancel the setup program

Would you like to continue with set up? [yes]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
BY SETTING UP AND USING THIS SOFTWARE YOU ARE CONSENTING TO BE BOUND BY
AND ARE BECOMING A PARTY TO THE AGREEMENT FOUND IN THE
LICENSE.TXT FILE. IF YOU DO NOT AGREE TO ALL OF THE TERMS
OF THIS AGREEMENT, PLEASE DO NOT SET UP OR USE THIS SOFTWARE.

Do you agree to the license terms? [no]: <userinput>yes &lt;enter&gt;</userinput>

==============================================================================
Your system has been scanned for potential problems, missing patches,
etc.  The following output is a report of the items found that need to
be addressed before running this software in a production
environment.

CentOS Directory Server system tuning analysis version 10-AUGUST-2007.

NOTICE : System is x86_64-unknown-linux2.6.18-308.el5 (1 processor).

WARNING: 497MB of physical memory is available on the system. 1024MB is recommended for best performance on large production system.

NOTICE : The net.ipv4.tcp_keepalive_time is set to 7200000 milliseconds
(120 minutes).  This may cause temporary server congestion from lost
client connections.

WARNING: There are only 1024 file descriptors (hard limit) available, which
limit the number of simultaneous connections.  

WARNING: There are only 1024 file descriptors (soft limit) available, which
limit the number of simultaneous connections.  

Would you like to continue? [no]: <userinput>yes &lt;enter&gt;</userinput>

==============================================================================
Choose a setup type:

   1. Express
       Allows you to quickly set up the servers using the most
       common options and pre-defined defaults. Useful for quick
       evaluation of the products.

   2. Typical
       Allows you to specify common defaults and options.

   3. Custom
       Allows you to specify more advanced options. This is 
       recommended for experienced server administrators only.

To accept the default shown in brackets, press the Enter key.

Choose a setup type [2]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
Enter the fully qualified domain name of the computer
on which you're setting up server software. Using the form
&lt;hostname&gt;.&lt;domainname&gt;
Example: eros.example.com.

To accept the default shown in brackets, press the Enter key.

Computer name [ds1.dmsat1.org]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
The servers must run as a specific user in a specific group.
It is strongly recommended that this user should have no privileges
on the computer (i.e. a non-root user).  The setup procedure
will give this user/group some permissions in specific paths/files
to perform server-specific operations.

If you have not yet created a user and group for the servers,
create this user and group using your native operating
system utilities.

System User [nobody]: <userinput>&lt;enter&gt;</userinput>
System Group [nobody]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
Server information is stored in the configuration directory server.
This information is used by the console and administration server to
configure and manage your servers.  If you have already set up a
configuration directory server, you should register any servers you
set up or create with the configuration server.  To do so, the
following information about the configuration server is required: the
fully qualified host name of the form
&lt;hostname&gt;.&lt;domainname&gt;(e.g. hostname.example.com), the port number
(default 389), the suffix, the DN and password of a user having
permission to write the configuration information, usually the
configuration directory administrator, and if you are using security
(TLS/SSL).  If you are using TLS/SSL, specify the TLS/SSL (LDAPS) port
number (default 636) instead of the regular LDAP port number, and
provide the CA certificate (in PEM/ASCII format).

If you do not yet have a configuration directory server, enter 'No' to
be prompted to set up one.

Do you want to register this software with an existing
configuration directory server? [no]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
Please enter the administrator ID for the configuration directory
server.  This is the ID typically used to log in to the console.  You
will also be prompted for the password.

Configuration directory server
administrator ID [admin]: <userinput>&lt;enter&gt;</userinput>
Password: <userinput>redhat</userinput>
Password (confirm): <userinput>redhat</userinput>

==============================================================================
The information stored in the configuration directory server can be
separated into different Administration Domains.  If you are managing
multiple software releases at the same time, or managing information
about multiple domains, you may use the Administration Domain to keep
them separate.

If you are not using administrative domains, press Enter to select the
default.  Otherwise, enter some descriptive, unique name for the
administration domain, such as the name of the organization
responsible for managing the domain.

Administration Domain [dmsat1.org]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
The standard directory server network port number is 389.  However, if
you are not logged as the superuser, or port 389 is in use, the
default value will be a random unused port number greater than 1024.
If you want to use port 389, make sure that you are logged in as the
superuser, that port 389 is not in use.

Directory server network port [389]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
Each instance of a directory server requires a unique identifier.
This identifier is used to name the various
instance specific files and directories in the file system,
as well as for other uses as a server instance identifier.

Directory server identifier [ds1]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
The suffix is the root of your directory tree.  The suffix must be a valid DN.
It is recommended that you use the dc=domaincomponent suffix convention.
For example, if your domain is example.com,
you should use dc=example,dc=com for your suffix.
Setup will create this initial suffix for you,
but you may have more than one suffix.
Use the directory server utilities to create additional suffixes.

Suffix [dc=dmsat1, dc=org]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
Certain directory server operations require an administrative user.
This user is referred to as the Directory Manager and typically has a
bind Distinguished Name (DN) of cn=Directory Manager.
You will also be prompted for the password for this user.  The password must
be at least 8 characters long, and contain no spaces.
Press Control-B or type the word "back", then Enter to back up and start over.

Directory Manager DN [cn=Directory Manager]: <userinput>&lt;enter&gt;</userinput>
==============================================================================
Certain directory server operations require an administrative user.
This user is referred to as the Directory Manager and typically has a
bind Distinguished Name (DN) of cn=Directory Manager.
You will also be prompted for the password for this user.  The password must
be at least 8 characters long, and contain no spaces.
Press Control-B or type the word "back", then Enter to back up and start over.

Directory Manager DN [cn=Directory Manager]: <userinput>&lt;enter&gt;</userinput>
Password: <userinput>redhat enter</userinput>
The password must be at least 8 characters long.  Please choose another one.

Password: <userinput>redhat123 enter</userinput>
Password (confirm): <userinput>redhat123 enter</userinput>

==============================================================================
The Administration Server is separate from any of your web or application
servers since it listens to a different port and access to it is
restricted.

Pick a port number between 1024 and 65535 to run your Administration
Server on. You should NOT use a port number which you plan to
run a web or application server on, rather, select a number which you
will remember and which will not be used for anything else.

Administration port [9830]: <userinput>&lt;enter&gt;</userinput>

==============================================================================
The interactive phase is complete.  The script will now set up your
servers.  Enter No or go Back if you want to change something.

Are you ready to set up your servers? [yes]: <userinput>&lt;enter&gt;</userinput>
Creating directory server . . .
Your new DS instance 'ds1' was successfully created.
Creating the configuration directory server . . .
Beginning Admin Server creation . . .
Creating Admin Server files and directories . . .
Updating adm.conf . . .
Updating admpw . . .
Registering admin server with the configuration directory server . . .
Updating adm.conf with information from configuration directory server . . .
Updating the configuration for the httpd engine . . .
Starting admin server . . .
The admin server was successfully started.
Admin server was successfully created, configured, and started.
Exiting . . .
Log file is '/tmp/setupROZwJx.log'
      </screen>
      We want to find the silent install file, generated by
      the manual installation process (provided by the
      --keepcache option):
      <screen>
&ds1p; <userinput>updatedb</userinput>
.. wait 20 seconds ..
&ds1p; <userinput>locate *.inf</userinput>
/usr/share/dirsrv/inf/admin.inf
/usr/share/dirsrv/inf/setup.inf
/usr/share/dirsrv/inf/slapd.inf
      </screen>
      None of the files give the silent install information.
      So, probably this option works differently.
    </para>

    <para>
      If we want to undo the installation, so not only
      remove the RPM's, we do:
      <screen>
&ds1p; <userinput>/usr/sbin/remove-ds-admin.pl -f -y</userinput>
Removed admin server and all directory server instances
      </screen>
      For more information, see <command>man
      remove-ds-admin.pl</command>. To more delicately
      remove a directory server instance, one can use
      <command>ds-removal</command>, see <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />,
      section 4.7.1.
    </para>

    <para>
      We experiment a little bit more and try the silent
      install. The information of the anwer file (silent
      install file) is given in <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />,
      section 4.5. After some trial and error, we got:
      <screen>
&ds1p; <userinput>cat /root/setup.inf</userinput>
[General]
FullMachineName = ds1.dmsat1.org
SuiteSpotUserID = nobody
SuiteSpotGroup = nobody
AdminDomain = dmsat1.org
ConfigDirectoryAdminID = admin
ConfigDirectoryAdminPwd = redhat
ConfigDirectoryLdapURL = ldap://ds1.dmsat1.org:389/o=NetscapeRoot

[slapd]
SlapdConfigForMC = Yes
UseExistingMC = 0
ServerPort = 389
ServerIdentifier = ds1
Suffix = dc=dmsat1,dc=org
RootDN = cn=Directory Manager
RootDNPwd = redhat123
ds_bename = exampleDB
AddSampleEntries = No

[admin]
Port = 9830
ServerIpAddress = 192.168.5.14
ServerAdminID = admin
ServerAdminPwd = redhat

&ds1p; <userinput>/usr/sbin/setup-ds-admin.pl --silent --file=/root/setup.inf</userinput>
Creating directory server . . .
Your new DS instance 'ds1' was successfully created.
Creating the configuration directory server . . .
Beginning Admin Server creation . . .
Creating Admin Server files and directories . . .
Updating adm.conf . . .
Updating admpw . . .
Registering admin server with the configuration directory server . . .
Updating adm.conf with information from configuration directory server . . .
Updating the configuration for the httpd engine . . .
Starting admin server . . .
The admin server was successfully started.
Admin server was successfully created, configured, and started.
Exiting . . .
Log file is '/tmp/setup7eq8sU.log'

      </screen>
      One could be interested in the parameter one can
      specify in the silent install file. The explanation of
      the parameters can be found in <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />,
      section 4.5.5.1.
    </para>

    <para>
      In order to be able to do something with the Directory
      Server, we log in ont it with <command> ssh
      -X</command>. For it to work:
      <screen>
&ds1p; <userinput>yum install xauth</userinput>
.. output skipped ..
Ctrl-D
&hostp; <userinput>ssh -X -l root 192.168.5.14</userinput>
.
.
/usr/bin/xauth:  creating new authority file /root/.Xauthority
      </screen>
      The first thing we do, is to fire up the admin
      console:
      <screen>
&ds1p; <userinput>/usr/bin/centos-idm-console</userinput>
      </screen>
      A graphical user interface is started. Fill in:
      <table>
        <title>CentOS Management Console Login</title>
        <tgroup align="left" cols="2" colsep="1" rowsep="1">
          <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
          <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
          <tbody valign="top">
            <row>
              <entry>User ID:</entry>
              <entry>admin</entry>
            </row>
            <row>
              <entry>Password:</entry>
              <entry>redhat</entry>
            </row>
            <row>
              <entry>Administration URL:</entry>
              <entry>http://192.168.5.14:9830</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      Note, we found out on the command line that we could
      not use <ulink
      url="http://localhost:9830">http://localhost:9830</ulink>
      to log in:
      <screen>
&ds1p; <userinput>netstat -anp | grep 9830</userinput>
tcp        0      0 192.168.5.14:9830           0.0.0.0:*                   LISTEN      3378/httpd.worker
      </screen>
    </para>

    <para>
      What to do on the management console? If we follow the
      directions of <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />,
      section 4.1.1, then we miss some information. After
      firing up the console, one needs to expand the tree
      under the <emphasis role="bold">Servers and
      Applications</emphasis> tab. The name of the root of
      the tree is <emphasis
      role="bold">ds1.dmsat1.org</emphasis>. Expand
      <emphasis role="bold">Server Group</emphasis> too.
      Now, one sees two empty boxes, called <emphasis
      role="bold">Administration Server</emphasis>and
      <emphasis role="bold">Directory Server
      (ds1)</emphasis>. Left mouse-click on both. Now the
      boxes are filled and one can fire up the underlying
      programs (by double clicking them).
    </para>

    <para>
      At this point we can continue following the directions
      of <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />.
      We fire up the Administration Server. Now click on
      <emphasis role="bold">Configuration</emphasis> and one
      sees the <emphasis role="bold">Network tab</emphasis>.
    </para>

    <para>
      At this point we want to make a mental note about the
      option to use the <emphasis
      role="bold">ConfigFile</emphasis> parameter as
      described in <xref
      linkend="msat-guide-appendix1-rhds_install_guide" />,
      section 4.5.4. For complete automation of the
      installation we might need this option!
    </para>

  </section>

  <section id="msat-guide-software-test-add_user">
    <title>Adding a user</title>
    <para>
      In this section we show how to add a user via the
      <command>centos-idm-console</command> program. The
      steps are:
      <itemizedlist>
        <listitem>
          <para>
            <screen>
&ds1p; <userinput>centos-idm-console</userinput>
            </screen>
          </para>
        </listitem>
        <listitem>
          <para>
            <table>
              <title>CentOS Management Console Login</title>
              <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
                <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
                <tbody valign="top">
                  <row>
                    <entry>User ID:</entry>
                    <entry>cn=Directory Manager</entry>
                  </row>
                  <row>
                    <entry>Password:</entry>
                    <entry>redhat123</entry>
                  </row>
                  <row>
                    <entry>Administration URL:</entry>
                    <entry>http://192.168.5.14:9830</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
            Press <emphasis role="bold">OK</emphasis>
          </para>
        </listitem>
        <listitem>
          <para>
            Expand
            <computeroutput>ds1.dmsat1.org</computeroutput>,
            <computeroutput>Server Group</computeroutput> on
            the <computeroutput>+</computeroutput> signs and
            double click left mouse button to open
            <computeroutput>Directory Server
            (ds1)</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            Click on the
            <computeroutput>Directory</computeroutput> tab.
          </para>
        </listitem>
        <listitem>
          <para>
            Expand the
            <computeroutput>example</computeroutput>
            subfolder in the tree.
          </para>
        </listitem>
        <listitem>
          <para>
            Select the <computeroutput>Poeple (5
            acis)</computeroutput> item.
          </para>
        </listitem>
        <listitem>
          <para>
            Right mouse click and select
            <computeroutput>New</computeroutput> and
            <computeroutput>User</computeroutput>
          </para>
        </listitem>
        <listitem>
          <para>
            Fill in:
            <table>
              <title>CentOS Management Console Login</title>
              <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
                <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
                <tbody valign="top">
                  <row>
                    <entry>* First Name:</entry>
                    <entry>Allard</entry>
                  </row>
                  <row>
                    <entry>* Last Name:</entry>
                    <entry>Berends</entry>
                  </row>
                  <row>
                    <entry>* Common Name(s):</entry>
                    <entry>Allard Berends</entry>
                  </row>
                  <row>
                    <entry>User ID:</entry>
                    <entry>aberends</entry>
                  </row>
                  <row>
                    <entry>Password:</entry>
                    <entry>redhat</entry>
                  </row>
                  <row>
                    <entry>confirm Password:</entry>
                    <entry>redhat</entry>
                  </row>
                  <row>
                    <entry>E-Mail:</entry>
                    <entry>aberends@dmsat1.org</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
            Remaining fields are left empty. Press
            <computeroutput>OK</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            Verify the result on the command line with:
            <screen>
&ds1p; <userinput>ldapsearch -D 'cn=Directory Manager' -w redhat123 -h ds1.dmsat1.org -b ou=People,dc=dmsat1,dc=org '(objectclass=*)'</userinput>
version: 1
dn: ou=People,dc=dmsat1,dc=org
objectClass: top
objectClass: organizationalunit
ou: People

dn: uid=aberends,ou=People,dc=dmsat1,dc=org
mail: aberends@dmm01.dmsat1.org
uid: aberends
givenName: Allard
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetorgperson
sn: Berends
cn: Allard Berends
userPassword: {SSHA}DFJonLQQoxIXHSF16xGHh7scKynrVvXLcQIG3g==
            </screen>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>

  <section id="msat-guide-software-test-modify_user">
    <title>Modifying a user</title>
    <para>
      In the former section we have successfully added a
      user. In this section we want to change the properties
      of the user, so we modify the user entry in LDAP:
      <itemizedlist>
        <listitem>
          <para>
            On the <emphasis role="italic">CentOS Directory
            Server Console</emphasis> expand
            <computeroutput>example</computeroutput> and
            click on <computeroutput>People (5
            acis)</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            In the right pane, one sees the
            <computeroutput>test</computeroutput> entry.
            With the right mouse button, click on it and
            select <computeroutput>Advanced
            Properties...</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            Now, scroll down to <computeroutput>Object
            class</computeroutput> and select it with the
            left mouse button by clicking on the values
            (e.g. top). In the right pane, click
            on <computeroutput>Add Value</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            Select
            <computeroutput>posixaccount</computeroutput>
            and click on
            <computeroutput>OK</computeroutput>.
          </para>
        </listitem>
        <listitem>
          <para>
            In the left pane, we need to add the following
            values:
            <table>
              <title>Posix account fields</title>
              <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
                <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
                <tbody valign="top">
                  <row>
                    <entry>gidnumber</entry>
                    <entry>1000</entry>
                  </row>
                  <row>
                    <entry>homedirectory</entry>
                    <entry>/homes/aberends</entry>
                  </row>
                  <row>
                    <entry>uidnumber</entry>
                    <entry>1000</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
            Now click on
            <computeroutput>OK</computeroutput>.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>

  <section>
    <title>Making use of LDAP</title>
    <para>
      In order to make use of the Directory Server (LDAP),
      we make the following setup:
      <variablelist>
        <varlistentry>
          <term>NFS</term>
          <listitem>
            <para>
              On the Spacewalk server, we enable NFS to make
              sure that user can mount their home
              directories via NFS.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>autofs</term>
          <listitem>
            <para>
              On all Linux systems, we switch on the
              <emphasis role="bold">autofs</emphasis>
              function. This makes it possible to
              automatically mount a user's home directory
              upon login.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>pam_ldap</term>
          <listitem>
            <para>
              For Authentication, Authorization and
              Accounting (AAA), we use LDAP. It needs to be
              integrated with the login procedure. This is
              the task of <emphasis
              role="bold">pam_ldap</emphasis>. Basically,
              the following items result it combined data
              from files and LDAP:
              <itemizedlist>
                <listitem>
                  <para>
                    <command>getent passwd</command>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <command>getent shadow</command>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <command>getent group</command>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>

    <para>
      We start with enabling NFS on the Spacewalk server:
      <screen>
&sw1p; <userinput>yum install nfs-utils</userinput>
.
.
Installing:
 nfs-utils           x86_64        1:1.2.7-6.fc18          updates        352 k
Installing for dependencies:
 keyutils            x86_64        1.5.5-3.fc18            fedora          53 k
 libevent            x86_64        2.0.18-2.fc18           fedora         173 k
 libgssglue          x86_64        0.4-1.fc18              fedora          25 k
 libnfsidmap         x86_64        0.25-4.fc18             fedora          37 k
 libtirpc            x86_64        0.2.2-42.fc18           fedora          81 k
 quota               x86_64        1:4.00-7.fc18           updates        160 k
 quota-nls           noarch        1:4.00-7.fc18           updates         74 k
 rpcbind             x86_64        0.2.0-20.fc18           fedora          55 k
 tcp_wrappers        x86_64        7.6-70.fc18             fedora          77 k
.
.
&sw1p; <userinput>cat /etc/exports</userinput>
/home *(rw)
      </screen>
    </para>

    <para>
      We first examine what ports are used by the daemons
      needed for NFS:
      <screen>
&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/a</userinput>
&sw1p; <userinput>systemctl start rpcbind.service</userinput>
&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/b</userinput>
&sw1p; <userinput>diff /tmp/a /tmp/b</userinput>
10a11
> tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      4877/rpcbind        
23a25
> tcp6       0      0 :::111                  :::*                    LISTEN      4877/rpcbind        
28a31
> udp        0      0 0.0.0.0:111             0.0.0.0:*                           4877/rpcbind        
30a34
> udp        0      0 0.0.0.0:812             0.0.0.0:*                           4877/rpcbind        
31a36
> udp6       0      0 :::111                  :::*                                4877/rpcbind        
33a39
> udp6       0      0 :::812                  :::*                                4877/rpcbind
.. tcp,udp 111 and udp 812 ..
&sw1p; <userinput>rpcinfo</userinput>
   program version netid     address                service    owner
    100000    4    tcp6      ::.0.111               portmapper superuser
    100000    3    tcp6      ::.0.111               portmapper superuser
    100000    4    udp6      ::.0.111               portmapper superuser
    100000    3    udp6      ::.0.111               portmapper superuser
    100000    4    tcp       0.0.0.0.0.111          portmapper superuser
    100000    3    tcp       0.0.0.0.0.111          portmapper superuser
    100000    2    tcp       0.0.0.0.0.111          portmapper superuser
    100000    4    udp       0.0.0.0.0.111          portmapper superuser
    100000    3    udp       0.0.0.0.0.111          portmapper superuser
    100000    2    udp       0.0.0.0.0.111          portmapper superuser
    100000    4    local     /var/run/rpcbind.sock  portmapper superuser
    100000    3    local     /var/run/rpcbind.sock  portmapper superuser

&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/a</userinput>
&sw1p; <userinput>systemctl start nfs-server.service</userinput>
&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/b</userinput>
&sw1p; <userinput>diff /tmp/a /tmp/b</userinput>
3a4
> tcp        0      0 0.0.0.0:43415           0.0.0.0:*               LISTEN      -                   
8a10
> tcp        0      0 0.0.0.0:2049            0.0.0.0:*               LISTEN      -                   
10a13
> tcp        0      0 0.0.0.0:875             0.0.0.0:*               LISTEN      5181/rpc.rquotad    
11a15
> tcp        0      0 0.0.0.0:20048           0.0.0.0:*               LISTEN      5182/rpc.mountd     
17a22
> tcp6       0      0 :::2049                 :::*                    LISTEN      -                   
23a29
> tcp6       0      0 :::42093                :::*                    LISTEN      -                   
25a32
> tcp6       0      0 :::20048                :::*                    LISTEN      5182/rpc.mountd     
28a36,38
> udp        0      0 0.0.0.0:20048           0.0.0.0:*                           5182/rpc.mountd     
> udp        0      0 0.0.0.0:50926           0.0.0.0:*                           -                   
> udp        0      0 0.0.0.0:2049            0.0.0.0:*                           -                   
34a45,47
> udp        0      0 0.0.0.0:875             0.0.0.0:*                           5181/rpc.rquotad    
> udp6       0      0 :::20048                :::*                                5182/rpc.mountd     
> udp6       0      0 :::2049                 :::*                                -                   
39a53
> udp6       0      0 :::52212                :::*                                - 
&sw1p; <userinput>rpcinfo</userinput>
   program version netid     address                service    owner
    100000    4    tcp6      ::.0.111               portmapper superuser
    100000    3    tcp6      ::.0.111               portmapper superuser
    100000    4    udp6      ::.0.111               portmapper superuser
    100000    3    udp6      ::.0.111               portmapper superuser
    100000    4    tcp       0.0.0.0.0.111          portmapper superuser
    100000    3    tcp       0.0.0.0.0.111          portmapper superuser
    100000    2    tcp       0.0.0.0.0.111          portmapper superuser
    100000    4    udp       0.0.0.0.0.111          portmapper superuser
    100000    3    udp       0.0.0.0.0.111          portmapper superuser
    100000    2    udp       0.0.0.0.0.111          portmapper superuser
    100000    4    local     /var/run/rpcbind.sock  portmapper superuser
    100000    3    local     /var/run/rpcbind.sock  portmapper superuser
    100003    2    tcp       0.0.0.0.8.1            nfs        superuser
    100003    3    tcp       0.0.0.0.8.1            nfs        superuser
    100003    4    tcp       0.0.0.0.8.1            nfs        superuser
    100227    2    tcp       0.0.0.0.8.1            nfs_acl    superuser
    100227    3    tcp       0.0.0.0.8.1            nfs_acl    superuser
    100003    2    udp       0.0.0.0.8.1            nfs        superuser
    100003    3    udp       0.0.0.0.8.1            nfs        superuser
    100003    4    udp       0.0.0.0.8.1            nfs        superuser
    100227    2    udp       0.0.0.0.8.1            nfs_acl    superuser
    100227    3    udp       0.0.0.0.8.1            nfs_acl    superuser
    100003    2    tcp6      ::.8.1                 nfs        superuser
    100003    3    tcp6      ::.8.1                 nfs        superuser
    100003    4    tcp6      ::.8.1                 nfs        superuser
    100227    2    tcp6      ::.8.1                 nfs_acl    superuser
    100227    3    tcp6      ::.8.1                 nfs_acl    superuser
    100003    2    udp6      ::.8.1                 nfs        superuser
    100003    3    udp6      ::.8.1                 nfs        superuser
    100003    4    udp6      ::.8.1                 nfs        superuser
    100227    2    udp6      ::.8.1                 nfs_acl    superuser
    100227    3    udp6      ::.8.1                 nfs_acl    superuser
    100021    1    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    3    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    4    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    1    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    3    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    4    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    1    udp6      ::.203.244             nlockmgr   superuser
    100021    3    udp6      ::.203.244             nlockmgr   superuser
    100021    4    udp6      ::.203.244             nlockmgr   superuser
    100021    1    tcp6      ::.164.109             nlockmgr   superuser
    100021    3    tcp6      ::.164.109             nlockmgr   superuser
    100021    4    tcp6      ::.164.109             nlockmgr   superuser
    100011    1    udp       0.0.0.0.3.107          rquotad    superuser
    100011    2    udp       0.0.0.0.3.107          rquotad    superuser
    100011    1    tcp       0.0.0.0.3.107          rquotad    superuser
    100011    2    tcp       0.0.0.0.3.107          rquotad    superuser
    100005    1    udp       0.0.0.0.78.80          mountd     superuser
    100005    1    tcp       0.0.0.0.78.80          mountd     superuser
    100005    1    udp6      ::.78.80               mountd     superuser
    100005    1    tcp6      ::.78.80               mountd     superuser
    100005    2    udp       0.0.0.0.78.80          mountd     superuser
    100005    2    tcp       0.0.0.0.78.80          mountd     superuser
    100005    2    udp6      ::.78.80               mountd     superuser
    100005    2    tcp6      ::.78.80               mountd     superuser
    100005    3    udp       0.0.0.0.78.80          mountd     superuser
    100005    3    tcp       0.0.0.0.78.80          mountd     superuser
    100005    3    udp6      ::.78.80               mountd     superuser
    100005    3    tcp6      ::.78.80               mountd     superuser

&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/a</userinput>
&sw1p; <userinput>systemctl start nfs-lock.service</userinput>
&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/b</userinput>
&sw1p; <userinput>diff /tmp/a /tmp/b</userinput>
3a4
> tcp        0      0 0.0.0.0:44215           0.0.0.0:*               LISTEN      5239/rpc.statd      
18a20
> tcp6       0      0 :::57560                :::*                    LISTEN      5239/rpc.statd      
43a46,47
> udp        0      0 0.0.0.0:57668           0.0.0.0:*                           5239/rpc.statd      
> udp        0      0 127.0.0.1:755           0.0.0.0:*                           5239/rpc.statd      
50a55
> udp6       0      0 :::47307                :::*                                5239/rpc.statd
&sw1p; <userinput>rpcinfo</userinput>
   program version netid     address                service    owner
    100000    4    tcp6      ::.0.111               portmapper superuser
    100000    3    tcp6      ::.0.111               portmapper superuser
    100000    4    udp6      ::.0.111               portmapper superuser
    100000    3    udp6      ::.0.111               portmapper superuser
    100000    4    tcp       0.0.0.0.0.111          portmapper superuser
    100000    3    tcp       0.0.0.0.0.111          portmapper superuser
    100000    2    tcp       0.0.0.0.0.111          portmapper superuser
    100000    4    udp       0.0.0.0.0.111          portmapper superuser
    100000    3    udp       0.0.0.0.0.111          portmapper superuser
    100000    2    udp       0.0.0.0.0.111          portmapper superuser
    100000    4    local     /var/run/rpcbind.sock  portmapper superuser
    100000    3    local     /var/run/rpcbind.sock  portmapper superuser
    100003    2    tcp       0.0.0.0.8.1            nfs        superuser
    100003    3    tcp       0.0.0.0.8.1            nfs        superuser
    100003    4    tcp       0.0.0.0.8.1            nfs        superuser
    100227    2    tcp       0.0.0.0.8.1            nfs_acl    superuser
    100227    3    tcp       0.0.0.0.8.1            nfs_acl    superuser
    100003    2    udp       0.0.0.0.8.1            nfs        superuser
    100003    3    udp       0.0.0.0.8.1            nfs        superuser
    100003    4    udp       0.0.0.0.8.1            nfs        superuser
    100227    2    udp       0.0.0.0.8.1            nfs_acl    superuser
    100227    3    udp       0.0.0.0.8.1            nfs_acl    superuser
    100003    2    tcp6      ::.8.1                 nfs        superuser
    100003    3    tcp6      ::.8.1                 nfs        superuser
    100003    4    tcp6      ::.8.1                 nfs        superuser
    100227    2    tcp6      ::.8.1                 nfs_acl    superuser
    100227    3    tcp6      ::.8.1                 nfs_acl    superuser
    100003    2    udp6      ::.8.1                 nfs        superuser
    100003    3    udp6      ::.8.1                 nfs        superuser
    100003    4    udp6      ::.8.1                 nfs        superuser
    100227    2    udp6      ::.8.1                 nfs_acl    superuser
    100227    3    udp6      ::.8.1                 nfs_acl    superuser
    100021    1    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    3    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    4    udp       0.0.0.0.198.238        nlockmgr   superuser
    100021    1    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    3    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    4    tcp       0.0.0.0.169.151        nlockmgr   superuser
    100021    1    udp6      ::.203.244             nlockmgr   superuser
    100021    3    udp6      ::.203.244             nlockmgr   superuser
    100021    4    udp6      ::.203.244             nlockmgr   superuser
    100021    1    tcp6      ::.164.109             nlockmgr   superuser
    100021    3    tcp6      ::.164.109             nlockmgr   superuser
    100021    4    tcp6      ::.164.109             nlockmgr   superuser
    100011    1    udp       0.0.0.0.3.107          rquotad    superuser
    100011    2    udp       0.0.0.0.3.107          rquotad    superuser
    100011    1    tcp       0.0.0.0.3.107          rquotad    superuser
    100011    2    tcp       0.0.0.0.3.107          rquotad    superuser
    100005    1    udp       0.0.0.0.78.80          mountd     superuser
    100005    1    tcp       0.0.0.0.78.80          mountd     superuser
    100005    1    udp6      ::.78.80               mountd     superuser
    100005    1    tcp6      ::.78.80               mountd     superuser
    100005    2    udp       0.0.0.0.78.80          mountd     superuser
    100005    2    tcp       0.0.0.0.78.80          mountd     superuser
    100005    2    udp6      ::.78.80               mountd     superuser
    100005    2    tcp6      ::.78.80               mountd     superuser
    100005    3    udp       0.0.0.0.78.80          mountd     superuser
    100005    3    tcp       0.0.0.0.78.80          mountd     superuser
    100005    3    udp6      ::.78.80               mountd     superuser
    100005    3    tcp6      ::.78.80               mountd     superuser
    100024    1    udp       0.0.0.0.225.68         status     29
    100024    1    tcp       0.0.0.0.172.183        status     29
    100024    1    udp6      ::.184.203             status     29
    100024    1    tcp6      ::.224.216             status     29

&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/a</userinput>
&sw1p; <userinput>systemctl start nfs-idmap.service</userinput>
&sw1p; <userinput>netstat -anput | grep -v ESTABL | grep -v TIME_W > /tmp/b</userinput>
&sw1p; <userinput>diff /tmp/a /tmp/b</userinput>
.. none ..
&sw1p; <userinput>rpcinfo</userinput>
.. same ..

      </screen>
      So, we come up with the list of ports:
      <table>
        <title>NFS ports</title>
        <tgroup align="left" cols="2" colsep="1" rowsep="1">
          <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
          <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
          <thead>
            <row>
              <entry>port</entry>
              <entry>deamon</entry>
            </row>
          </thead>
          <tbody valign="top">
            <row><entry>111</entry><entry>rpcbind</entry></row>
            <row><entry>812 *#</entry><entry>rpcbind</entry></row>
            <row><entry>43415 *#</entry><entry>kernel</entry></row>
            <row><entry>2049</entry><entry>kernel</entry></row>
            <row><entry>875</entry><entry>rpc.quotad</entry></row>
            <row><entry>20048</entry><entry>rpc.mountd</entry></row>
            <row><entry>42093 *#</entry><entry>kernel</entry></row>
            <row><entry>50926 *#</entry><entry>kernel</entry></row>
            <row><entry>52212 *#</entry><entry>kernel</entry></row>
            <row><entry>44215 *</entry><entry>rpc.statd</entry></row>
            <row><entry>57560 *</entry><entry>rpc.statd</entry></row>
            <row><entry>57668 *</entry><entry>rpc.statd</entry></row>
            <row><entry>755 *#</entry><entry>rpc.statd</entry></row>
            <row><entry>47307 *</entry><entry>rpc.statd</entry></row>
            <row><entry>* marked</entry><entry>changes per start</entry></row>
            <row><entry># marked</entry><entry>not fixable</entry></row>
          </tbody>
        </tgroup>
      </table>
      In <filename
      class="directory">/lib/systemd/system</filename>, one
      can find the service definitions of the system
      services. If we search for the daemons above, and NFS,
      we find:
      <screen>
&sw1p; <userinput>egrep -l 'rpcbind|quotad|mountd|statd|nfs' * 2>/dev/null | xargs grep EnvironmentFile</userinput>
nfs-blkmap.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-idmap.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-lock.service:EnvironmentFile=-/etc/sysconfig/nfs
nfslock.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-mountd.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-rquotad.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-secure-server.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-secure.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs-server.service:EnvironmentFile=-/etc/sysconfig/nfs
nfs.service:EnvironmentFile=-/etc/sysconfig/nfs
rpcbind.service:EnvironmentFile=/etc/sysconfig/rpcbind
rpcgssd.service:EnvironmentFile=-/etc/sysconfig/nfs
rpcidmapd.service:EnvironmentFile=-/etc/sysconfig/nfs
rpcsvcgssd.service:EnvironmentFile=-/etc/sysconfig/nfs
      </screen>
      Note the <emphasis role="bold">-</emphasis> before the
      path. It means that if the environment file does not
      exist, no error message is generated.
    </para>

    <para>
      From the information above, we can deduce that we must
      be able to configure the NFS ports via
      <filename>/etc/sysconfig/nfs</filename> and
      <filename>/etc/sysconfig/rpcbind</filename>. We fix
      the ports as much as possible:
      <screen>
&ds1p; <userinput>cat /etc/sysconfig/nfs</userinput>
#
# Optinal options passed to rquotad
RPCRQUOTADOPTS="-p 890"
#
# Optional arguments passed to in-kernel lockd
#LOCKDARG=
# TCP port rpc.lockd should listen on.
#LOCKD_TCPPORT=32803
LOCKD_TCPPORT=891
# UDP port rpc.lockd should listen on.
#LOCKD_UDPPORT=32769
LOCKD_UDPPORT=891
#
# Optional arguments passed to rpc.nfsd. See rpc.nfsd(8)
RPCNFSDARGS="-p 2049"
# Number of nfs server processes to be started.
# The default is 8. 
RPCNFSDCOUNT=8
# Set V4 grace period in seconds
#NFSD_V4_GRACE=90
#
# Optional arguments passed to rpc.mountd. See rpc.mountd(8)
RPCMOUNTDOPTS="-p 888"
#
# Optional arguments passed to rpc.statd. See rpc.statd(8)
STATDARG="-p 889"
#
# Optional arguments passed to rpc.idmapd. See rpc.idmapd(8)
RPCIDMAPDARGS=""
#
# Optional arguments passed to rpc.gssd. See rpc.gssd(8)
RPCGSSDARGS=""
#
# Optional arguments passed to rpc.svcgssd. See rpc.svcgssd(8)
RPCSVCGSSDARGS=""
#
# To enable RDMA support on the server by setting this to
# the port the server should listen on
#RDMA_PORT=20049 
#
# Optional arguments passed to blkmapd. See blkmapd(8)
BLKMAPDARGS=""
      </screen>
      We make sure that NFS runs after a reboot:
      <screen>
&sw1p; <userinput>systemctl enable rpcbind.service</userinput>
&sw1p; <userinput>systemctl enable nfs-lock.service</userinput>
&sw1p; <userinput>systemctl enable nfs-server.service</userinput>
&sw1p; <userinput>systemctl enable nfs-mountd.service</userinput>
&sw1p; <userinput>systemctl enable nfs-rquotad.service</userinput>
&sw1p; <userinput>systemctl enable nfs-idmap.service</userinput>
      </screen>
      <table>
        <title>Fixed NFS ports</title>
        <tgroup align="left" cols="2" colsep="1" rowsep="1">
          <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
          <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
          <thead>
            <row>
              <entry>port</entry>
              <entry>deamon</entry>
            </row>
          </thead>
          <tbody valign="top">
            <row><entry>111</entry><entry>rpcbind</entry></row>
            <row><entry>888</entry><entry>rpc.mountd</entry></row>
            <row><entry>889</entry><entry>rpc.statd</entry></row>
            <row><entry>890</entry><entry>rpc.rquotad</entry></row>
            <row><entry>891</entry><entry>kernel lockd</entry></row>
            <row><entry>2049</entry><entry>kernel nfs</entry></row>
            <row><entry>2049</entry><entry>kernel nfs_acl</entry></row>
          </tbody>
        </tgroup>
      </table>
    </para>

    <para>
      After fixing the NFS ports, we need to open up the
      firewall:
      <screen>
&sw1p; <userinput>firewall-cmd --get-active-zones</userinput>
public: eth0

&sw1p; <userinput>firewall-cmd --list-all</userinput>
public
  interfaces: eth0
  services: mdns http https dhcpv6-client ssh dns
  ports: 5222/tcp 5269/tcp
  forward-ports: 
  icmp-blocks:

&sw1p; <userinput>firewall-cmd --get-services</userinput>
cluster-suite pop3s bacula-client smtp ipp radius bacula ftp mdns samba dhcpv6-client https openvpn imaps samba-client http dns ntp vnc-server telnet libvirt ssh ipsec ipp-client amanda-client tftp-client nfs tftp libvirt-tls

&sw1p; <userinput>firewall-cmd --permanent --add-service=nfs</userinput>
&sw1p; <userinput>firewall-cmd --reload</userinput>
      </screen>
      It turns out that only port 2049 is open. Examination
      of the NFS service definition shows:
      <screen>
&ds1p; <userinput>cat /lib/firewalld/services/nfs.xml</userinput>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;service&gt;
  &lt;short&gt;NFS4&lt;/short&gt;
  &lt;description&gt;The NFS4 protocol is used to share files via TCP networking. You will need to have the NFS tools installed and properly configure your NFS server for this option to be useful.&lt;/description&gt;
  &lt;port protocol="tcp" port="2049"/&gt;
&lt;/service&gt;
      </screen>
      In conclusion: we miss a number of ports to make NFS
      functional. We add these ports by copying the service
      definition to
      <filename>/etc/firewalld/services</filename> and
      adding port numbers.
      <screen>
&sw1p; <userinput>cp /lib/firewalld/services/nfs.xml /etc/firewalld/services</userinput>
.. edit ..
&sw1p; <userinput>cat /etc/firewalld/services/nfs.xml</userinput>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;service&gt;
  &lt;short&gt;NFS4&lt;/short&gt;
  &lt;description&gt;The NFS4 protocol is used to share files via TCP networking. You will need to have the NFS tools installed and properly configure your NFS server for this option to be useful.&lt;/description&gt;
  &lt;port protocol="tcp" port="111"/&gt;
  &lt;port protocol="udp" port="111"/&gt;
  &lt;port protocol="tcp" port="888"/&gt;
  &lt;port protocol="udp" port="888"/&gt;
  &lt;port protocol="tcp" port="889"/&gt;
  &lt;port protocol="udp" port="889"/&gt;
  &lt;port protocol="tcp" port="890"/&gt;
  &lt;port protocol="udp" port="890"/&gt;
  &lt;port protocol="tcp" port="891"/&gt;
  &lt;port protocol="udp" port="891"/&gt;
  &lt;port protocol="tcp" port="2049"/&gt;
  &lt;port protocol="udp" port="2049"/&gt;
&lt;/service&gt;
&sw1p; <userinput>firewall-cmd --reload</userinput>
&sw1p; <userinput>iptables -L IN_ZONE_public_allow -v -n --line-numbers</userinput>
Chain IN_ZONE_public_allow (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            224.0.0.251          udp dpt:5353 ctstate NEW
2        0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80 ctstate NEW
3        0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:53 ctstate NEW
4        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53 ctstate NEW
5        0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:111 ctstate NEW
6        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:111 ctstate NEW
7        0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:888 ctstate NEW
8        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:888 ctstate NEW
9        0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:889 ctstate NEW
10       0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:889 ctstate NEW
11       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:890 ctstate NEW
12       0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:890 ctstate NEW
13       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:891 ctstate NEW
14       0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:891 ctstate NEW
15       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:2049 ctstate NEW
16       0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:2049 ctstate NEW
17       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22 ctstate NEW
18       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:443 ctstate NEW
19       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5222 ctstate NEW
20       0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5269 ctstate NEW
      </screen>
    </para>

    <para>
      After all the steps we want to test if NFS works:
      <screen>
&sw1p; <userinput>systemctl stop nfs-idmap.service</userinput>
&sw1p; <userinput>systemctl stop nfs-rquotad.service</userinput>
&sw1p; <userinput>systemctl stop nfs-mountd.service</userinput>
&sw1p; <userinput>systemctl stop nfs-server.service</userinput>
&sw1p; <userinput>systemctl stop nfs-lock.service</userinput>
&sw1p; <userinput>systemctl stop rpcbind.service</userinput>

&sw1p; <userinput>groupadd -g 1000 allard</userinput>
&sw1p; <userinput>useradd -g 1000 -u 1000 allard</userinput>

&sw1p; <userinput>systemctl start rpcbind.service</userinput>
&sw1p; <userinput>systemctl start nfs-lock.service</userinput>
&sw1p; <userinput>systemctl start nfs-server.service</userinput>
&sw1p; <userinput>systemctl start nfs-mountd.service</userinput>
&sw1p; <userinput>systemctl start nfs-rquotad.service</userinput>
&sw1p; <userinput>systemctl start nfs-idmap.service</userinput>

&t1p; <userinput>groupadd -g 1000 allard</userinput>
&t1p; <userinput>useradd -g 1000 -u 1000 allard</userinput>
&t1p; <userinput>mount d19sw1.dmsat1.org:/homes /mnt</userinput>
&t1p; <userinput>ls -ld /mnt/allard</userinput>
drwx------ 2 allard allard 4096 Jun 13 19:56 /mnt/allard/
      </screen>
    </para>

    <para>
      Now NFS is working we concentrate on <emphasis
      role="bold">autofs</emphasis>. The goal is to
      automatically mount filesystems whenever they are
      needed. For example, if a user logs on and owns a home
      directory placed on an NFS filesystem, we want it to
      be automatically mounted.
    </para>

    <para>
      According to the man page, <command>man
      auto.master</command>, the
      <filename>/etc/auto.master</filename> filename is the
      default master map. Each line contains a mount point
      and refers to an autofs map. Furthermore, direct maps
      and indirect maps exists. So, how does it work?
    </para>

    <para>
      First we test the <emphasis>direct map</emphasis>
      principle. We want to automatically mount the NFS
      filesystem on <filename>/mnt/nfs</filename>. If we
      mount it manually, the command is:
      <screen>
&t1p; mount -o rw d19sw1.dmsat1.org:/homes /mnt/nfs
      </screen>
      Now, we configure:
      <screen>
&t1p; <userinput>grep /etc/auto.nfs /etc/auto.master</userinput>
/-  file:/etc/auto.nfs  rw
.. direct map ..

&t1p; <userinput>cat /etc/auto.nfs</userinput>
/mnt/nfs  d19sw1.dmsat1.org:/homes
.. mountpoint and NFS filesystem ..
      </screen>
    </para>

    <para>
      Testing the service:
      <screen>
&t1p; <userinput>service autofs restart</userinput>
&t1p; <userinput>mount | grep /mnt/nfs</userinput>
.. nothing ..
&t1p; <userinput>ls /mnt/nfs</userinput>
allard  test
&t1p; <userinput>mount | grep /mnt/nfs</userinput>
d19sw1.dmsat1.org:/homes on /mnt/nfs type nfs (rw,addr=192.168.5.11)
      </screen>
    </para>

    <para>
      Next, we want to make sure that all users have a home
      directory coming from NFS. Consequently, when a user
      logs in, the <filename>/homes/&lt;user&gt;</filename>
      directory must be mounted as their home directory.
      Notice that we mentioned <filename>/homes</filename>
      and not <filename>/home</filename>. Since our systems
      might have local system accounts in the future that
      need <filename>/home/&lt;user&gt;</filename>, we use
      <filename>/homes</filename> for the user accounts.
    </para>

    <para>
      For the task at hand, we use an indirect map, with the
      <emphasis role="bold">map key substitution</emphasis>
      and <emphasis role="bold">wildcard key</emphasis>
      options, see <command>man 5 autofs</command>:
      <screen>
&t1p; <userinput>grep /etc/auto.homes /etc/auto.master</userinput>
/homes  file:/etc/auto.homes  rw
.. indirect map ..

&t1p; <userinput>cat /etc/auto.homes</userinput>
*   d19sw1.dmsat1.org:/homes/&amp;
.. wildcard and map key substition ..
      </screen>
    </para>

    <para>
      First of all, we want to make a backup of some files
      to use for later reference:
      <screen>
&t1p; <userinput>cd /root</userinput>
&t1p; <userinput>mkdir empty</userinput>
&t1p; <userinput>cd empty</userinput>
&t1p; <userinput>tar cf ../afiles.tar .</userinput>
&t1p; <userinput>tar cf ../bfiles.tar .</userinput>
&t1p; <userinput>cd ..</userinput>
&t1p; <userinput>rmdir empty</userinput>
&t1p; <userinput>for i in /etc/pam.d/system-auth-ac /etc/gshadow /etc/ldap.conf /etc/group /etc/openldap/ldap.conf /etc/sysconfig/authconfig /etc/nsswitch.conf; do tar rf afiles.tar $i; done</userinput>
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
&t1p; <userinput>tar tvf afiles.tar</userinput>
drwxr-xr-x root/root         0 2013-06-17 23:14:44 ./
-rw-r--r-- root/root       844 2013-06-17 23:03:57 etc/pam.d/system-auth-ac
-r-------- root/root       478 2013-06-17 23:05:14 etc/gshadow
-rw-r--r-- root/root      9111 2013-06-17 23:03:57 etc/ldap.conf
-rw-r--r-- root/root       578 2013-06-17 23:05:14 etc/group
-rw-r--r-- root/root       327 2013-06-17 23:03:57 etc/openldap/ldap.conf
-rw-r--r-- root/root       312 2013-06-17 23:03:57 etc/sysconfig/authconfig
-rw-r--r-- root/root      1716 2013-06-17 23:01:28 etc/nsswitch.conf
      </screen>
      We run the terminal interface utility
      <command>authconfig-tui</command> to configure LDAP and
      LDAP authentication. Other fields remain the same. So
      we have checked:
      <orderedlist>
        <listitem>
          <para>
            Use LDAP
          </para>
        </listitem>
        <listitem>
          <para>
            Use MD5 Passwords
          </para>
        </listitem>
        <listitem>
          <para>
            Use Shadow Passwords
          </para>
        </listitem>
        <listitem>
          <para>
            Use LDAP Authentication
          </para>
        </listitem>
        <listitem>
          <para>
            Uncheck <emphasis>Use TLS</emphasis>
          </para>
        </listitem>
        <listitem>
          <para>
            Server: ldap://192.168.5.14/
          </para>
        </listitem>
        <listitem>
          <para>
            Base DN: dc=dmsat1,dc=org
          </para>
        </listitem>
      </orderedlist>
      Again we keep a backup of the newly created set of
      files:
      <screen>
&t1p; <userinput>find /etc -type f -mmin -2</userinput>
/etc/pam.d/system-auth-ac
/etc/gshadow
/etc/ldap.conf
/etc/group
/etc/openldap/ldap.conf
/etc/sysconfig/authconfig
/etc/nsswitch.conf

&t1p; <userinput>for i in /etc/pam.d/system-auth-ac /etc/gshadow /etc/ldap.conf /etc/group /etc/openldap/ldap.conf /etc/sysconfig/authconfig /etc/nsswitch.conf; do tar rf bfiles.tar $i; done</userinput>
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names
tar: Removing leading `/' from member names

&t1p; <userinput>tar tvf bfiles.tar</userinput>
drwxr-xr-x root/root         0 2013-06-17 23:14:44 ./
-rw-r--r-- root/root      1068 2013-06-17 23:18:08 etc/pam.d/system-auth-ac
-r-------- root/root       478 2013-06-17 23:18:08 etc/gshadow
-rw-r--r-- root/root      9113 2013-06-17 23:18:08 etc/ldap.conf
-rw-r--r-- root/root       578 2013-06-17 23:18:08 etc/group
-rw-r--r-- root/root       329 2013-06-17 23:18:08 etc/openldap/ldap.conf
-rw-r--r-- root/root       314 2013-06-17 23:18:08 etc/sysconfig/authconfig
-rw-r--r-- root/root      1731 2013-06-17 23:18:08 etc/nsswitch.conf
      </screen>
      We want to compare the sets of files:
      <screen>
&t1p; <userinput>mkdir a b</userinput>
&t1p; <userinput>cp afiles.tar a</userinput>
&t1p; <userinput>cd a</userinput>
&t1p; <userinput>tar xf afiles.tar</userinput>
&t1p; <userinput>rm afiles.tar</userinput>
&t1p; <userinput>cp bfiles.tar b</userinput>
&t1p; <userinput>cd b</userinput>
&t1p; <userinput>tar xf bfiles.tar</userinput>
&t1p; <userinput>rm bfiles.tar</userinput>
&t1p; <userinput>cd /root</userinput>
&t1p; <userinput>diff -uNr a b</userinput>
      </screen>
      The parameter that are changed:
      <variablelist>
        <varlistentry>
          <term><filename>/etc/ldap.conf</filename></term>
          <listitem>
            <para>
              <screen>
-base dc=example,dc=com
+base dc=dmsat1,dc=org
-uri ldap://127.0.0.1/
+uri ldap://192.168.5.14/
              </screen>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>/etc/nsswitch.conf</filename></term>
          <listitem>
            <para>
              <screen>
-passwd:     files
-shadow:     files
-group:      files
+passwd:     files ldap
+shadow:     files ldap
+group:      files ldap
-netgroup:   nisplus
+netgroup:   files ldap
-automount:  files nisplus
+automount:  files ldap
              </screen>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>/etc/openldap/ldap.conf</filename></term>
          <listitem>
            <para>
              <screen>
-URI ldap://127.0.0.1/
-BASE dc=example,dc=com
+URI ldap://192.168.5.14/
+BASE dc=dmsat1,dc=org
              </screen>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>/etc/pam.d/system-auth-ac</filename></term>
          <listitem>
            <para>
              <screen>
 auth        required      pam_env.so
 auth        sufficient    pam_unix.so nullok try_first_pass
 auth        requisite     pam_succeed_if.so uid >= 500 quiet
+auth        sufficient    pam_ldap.so use_first_pass
 auth        required      pam_deny.so
 
-account     required      pam_unix.so
+account     required      pam_unix.so broken_shadow
 account     sufficient    pam_succeed_if.so uid &lt; 500 quiet
+account     [default=bad success=ok user_unknown=ignore] pam_ldap.so
 account     required      pam_permit.so
 
 password    requisite     pam_cracklib.so try_first_pass retry=3
 password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
+password    sufficient    pam_ldap.so use_authtok
 password    required      pam_deny.so
 
 session     optional      pam_keyinit.so revoke
 session     required      pam_limits.so
 session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
 session     required      pam_unix.so
+session     optional      pam_ldap.so
              </screen>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>/etc/sysconfig/authconfig</filename></term>
          <listitem>
            <para>
              <screen>
 USEWINBINDAUTH=no
-USEPASSWDQC=no
-PASSWDALGORITHM=md5
+USEKERBEROS=no
+USESYSNETAUTH=no
 USEPAMACCESS=no
 USESSSDAUTH=no
-USESYSNETAUTH=no
-USEKERBEROS=no
 FORCESMARTCARD=no
 USESMBAUTH=no
 USESMARTCARD=no
-USELDAPAUTH=no
+USELDAPAUTH=yes
 USESSSD=no
 USEWINBIND=no
 USESHADOW=yes
-USEDB=no
-USEHESIOD=no
-USELDAP=no
-USEMKHOMEDIR=no
+PASSWDALGORITHM=md5
 USELOCAUTHORIZE=no
+USEPASSWDQC=no
+USELDAP=yes
+USEMKHOMEDIR=no
+USEHESIOD=no
+USEDB=no
 USECRACKLIB=yes
 USENIS=no
              </screen>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </section>

</section>
