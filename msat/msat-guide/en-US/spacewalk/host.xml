<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "msat-guide.ent">
%BOOK_ENTITIES;
]>
<section id="spacewalk-host">
  <title>KVM host configuration</title>
  <table id="tabl-msat-guide-KVM_host_configuration-Time_needed">
    <title>Time needed</title>
    <tgroup align="left" cols="2" colsep="1" rowsep="1">
      <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
      <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
      <thead valign="top">
        <row>
          <entry>action</entry>
          <entry>time</entry>
        </row>
      </thead>
      <tbody valign="top">
        <row>
          <entry>virtual network creation</entry>
          <entry>10 minutes</entry>
        </row>
        <row>
          <entry>storage creation</entry>
          <entry>10 minutes</entry>
        </row>
        <row>
          <entry>memory verification</entry>
          <entry>3 minutes</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <para>
    In this section we discuss what needs to be done on the
    host system. For the Spacewalk KVM, we need: 
    <itemizedlist>
      <listitem>
        <para>
          A virtual network in which we let the Spacewalk
          server operate. In this network, we also add our
          test machine. This is the machine on which we test
          the provisioning.
        </para>
      </listitem>
      <listitem>
        <para>
          Disk storage. Eventually we want to have CentOS 5
          and 6 content including all the minor versions.
          Furthermore, we want to have some space available
          for making exports and imports when the occasion
          arises. So 300GB should suffice.
        </para>
      </listitem>
      <listitem>
        <para>
          Memory for the virutal CPU. At least 2GB is
          needed. To give the Spacewalk server some power we
          use 4GB.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <section id="spacewalk-host-network">
    <title>Virtual network</title>
    <para>
      We assume that most people use <systemitem
      class="ipaddress">192.168.1.0/24</systemitem> as their
      home network. Since we don't want to interfere, we use
      <systemitem
      class="ipaddress">192.168.5.0/24</systemitem>. This is
      a virtual network that needs to be created on the
      host. For more background information look at <ulink
      url="http://libvirt.org/formatnetwork.html">libvirt.org/formatnetwork.html</ulink>.
    </para>
    <note>
      <title>KVM virtualization must work on host</title>
      <para>
        We assume that on the Linux host system KVM
        virtualization is working. If this is not the case,
        please make sure it works first. The <systemitem
        class="daemon">libvirtd</systemitem> service must
        run. For more information, refer to <ulink
        url="http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html-single/Virtualization_Administration_Guide/index.html">Virtualization
        Administration Guide</ulink>.
      </para>

      <para>
        At least check <xref linkend="msat-guide-apdx_kvm" />.
      </para>
    </note>
    <para>
      The virtual network can be created via the
      <command>virsh</command> command line tool. Another
      way is the <command>virt-manager</command> graphical
      tool. We first show how to use the command line tool,
      and then the graphical tool.
    </para>
    <para>
      We have the following XML file: 
<screen>
&hostp; <userinput>cat svcs.xml</userinput>
&lt;network&gt;
  &lt;name&gt;svcs&lt;/name&gt;
  &lt;forward mode='nat'/&gt;
  &lt;bridge name='virbr2' stp='on' delay='0'/&gt;
  &lt;mac address='52:54:00:A8:05:01'/&gt;
  &lt;ip address='192.168.5.1' netmask='255.255.255.0'/&gt;
&lt;/network&gt;
</screen>

    </para>
    <para>
      Note that the above MAC address, <systemitem
      class="etheraddress">52:54:00:A8:05:01</systemitem>,
      is build up from the rules: 
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">52:54:00</emphasis>, which
            is fixed by definition. See the section
            <emphasis role="bold">Network
            Configuration</emphasis> of "man virt-install".
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">A8:05:01</emphasis>, which
            is the last 3 parts of <systemitem
            class="ipaddress">192.168.5.1</systemitem> in
            hexadecimal.
          </para>
        </listitem>
      </itemizedlist>
    </para>
    <para>
      Now, create the network, mark it as autostart and
      activate it, with: 
<screen>
&hostp; <userinput>virsh net-define svcs.xml</userinput>
Network svcs defined from test.xml

&hostp; <userinput>virsh net-autostart svcs</userinput>
Network svcs marked as autostarted

&hostp; <userinput>virsh net-start svcs</userinput>
Network svcs started

</screen>
    </para>
    <para>
      The command line method above, requires that one knows
      what must be specified in the XML file. Another way is
      to use the GUI, the <command>virt-manager</command>
      command. Use the following clickpath:
      <menuchoice><guimenu>Edit</guimenu>
      <guimenuitem>Connection
      Details</guimenuitem></menuchoice>. The
      <guilabel>Connetion Details</guilabel> window pops up.
      In here, click: <menuchoice><guimenu>Virtual
      Networks</guimenu> <guimenuitem>+ button</guimenuitem>
      </menuchoice>. The <guilabel>Create a new virtual
      network</guilabel> dialog pops up. Press
      <guibutton>Forward</guibutton>. Enter
      <userinput>svcs</userinput> in the <guilabel>Network
      Name:</guilabel> dialog box. Press
      <guibutton>Forward</guibutton> again. The
      <guilabel>Network:</guilabel> is
      <userinput>192.168.5.0/24</userinput>. Since, we don't
      use DHCP, unvink the <guilabel>Enable DHCP:</guilabel>
      box. Press <guibutton>Forward</guibutton>. Select the
      <guilabel>Forwarding to physical network</guilabel>
      radio button. The <guilabel>Destination:</guilabel>
      should be <userinput>Any physical device</userinput>
      and the <guilabel>Mode:</guilabel> should be
      <userinput>NAT</userinput>. Press
      <guibutton>Forward</guibutton> and then
      <guibutton>Finish</guibutton>.
    </para>
    <para>
      Note that via the GUI method, one does not have the
      option of setting the MAC address to a specific value,
      like <systemitem
      class="etheraddress">52:54:00:A8:05:01</systemitem>.
      Consequently, we prefer the command line method to
      create the virtual network.
    </para>
    <para>
      We assume that the newly created network is the third
      network after the <code>default</code> network and a
      future core network. Hence,
      it is connected to the <code>virbr2</code> device. The
      network is defined in an XML file in <filename
      class="directory">/etc/libvirt/qemu/networks</filename>,
      named <filename>svcs.xml</filename>. It can be shown
      with: 
<screen>
&hostp; <userinput>virsh net-dumpxml svcs</userinput>
&lt;network&gt;
  &lt;name&gt;svcs&lt;/name&gt;
  &lt;forward mode='nat'&gt;
    &lt;nat&gt;
      &lt;port start='1024' end='65535'/&gt;
    &lt;/nat&gt;
  &lt;/forward&gt;
  &lt;bridge name='virbr2' stp='on' delay='0'/&gt;
  &lt;mac address='52:54:00:A8:05:01'/&gt;
  &lt;ip address='192.168.5.1' netmask='255.255.255.0'/&gt;
&lt;/network&gt;
</screen>

    </para>
    <para>
      Make sure that the network is active and that it
      auto-starts: 
<screen>
&hostp; <userinput>virsh net-list</userinput>
Name                 State      Autostart
-----------------------------------------
default              active     yes       
svcs                 active     yes

</screen>
    </para>
  </section>
  
  <section id="spacewalk-host-storage">
    <title>Storage setup</title>
    <para>
      Note, the screen dumps in this section are examples.
      If you don't have 6 disks in you hosts, the output is
      very different! The idea is that one creates the
      storage for the Spacewalk server. The storage is a
      block device in the form of a logical volume. To make
      things easy, call it <emphasis>sw</emphasis>, or
      something similar. Here, we use
      <emphasis>sw</emphasis> to remind ourselves that it is
      the storage of the SpaceWalk server.
    </para>

    <para>
<screen>
&hostp; <userinput>parted -s /dev/sdb mklabel msdos</userinput>
&hostp; <userinput>parted -s /dev/sdb mkpart primary 0% 100%</userinput>
&hostp; <userinput>parted -s /dev/sdb print</userinput>
Model: ATA WDC WD10EADS-00M (scsi)
Disk /dev/sdb: 1000GB
Sector size (logical/physical): 512B/512B
Partition Table: msdos
Disk Flags: 

Number  Start   End     Size    Type     File system  Flags
 1      1049kB  1000GB  1000GB  primary  ext4
</screen>
    </para>

    <para>
<screen>
&hostp; <userinput>pvcreate /dev/sdb1</userinput>
WARNING: ext4 signature detected on /dev/sdb1 at offset 1080. Wipe it? [y/n] y
  Wiping ext4 signature on /dev/sdb1.
  Physical volume "/dev/sdb1" successfully created
&hostp; <userinput>vgcreate b /dev/sdb1</userinput>
  Volume group "b" successfully created
</screen>
    </para>

    <para>
      The KVM Spacewalk server needs disk space to run on.
      We provide it by means of a LV (Logical Volume)
      created on the host. The creation is done as follows: 
<screen>
&hostp; <userinput>pvs</userinput>
  PV         VG        Fmt  Attr PSize   PFree
  /dev/sda3  vg_server lvm2 a--  931.00g      0
  /dev/sdb1  b         lvm2 a--  931.51g 931.51g
  /dev/sdc1  c         lvm2 a--  931.51g 931.51g
  /dev/sdd1  d         lvm2 a--  931.51g 931.51g
  /dev/sde1  e         lvm2 a--  931.51g 931.51g
  /dev/sdf1  f         lvm2 a--  931.51g 931.51g

&hostp; <userinput>pvs -o +vg_extent_size /dev/sdb1</userinput>
  PV         VG   Fmt  Attr PSize   PFree   Ext
  /dev/sdb1  b    lvm2 a--  931.51g 931.51g 4.00m

&hostp; <userinput>lvcreate -n sw -l $((25 * 10 * 300)) b</userinput>
  Logical volume "sw" created

</screen>
    </para>
    <para>
      The newly created LV, <filename
      class="devicefile">/dev/b/sw</filename>, can now be
      presented to the virtual machine creation command as
      block device for storage.
    </para>
  </section>
  
  <section id="spacewalk-host-memory">
    <title>Memory setup</title>
    <para>
      From the information of the Spacewalk project, see
      <ulink
      url="https://fedorahosted.org/spacewalk">fedorahosted.org/spacewalk</ulink>,
      we know from the <emphasis role="bold">Spacewalk
      Installation Instructions</emphasis>, from a
      Prerequisites section that the minimum amount of RAM
      needed, is 2GB, but that 4GB is recommended. We know
      that on our host this requirement is no problem. We
      have 16GB of internal memory, which can be
      demonstrated with: 
<screen>
&hostp; <userinput>cat /proc/meminfo | grep ^MemTotal</userinput>
MemTotal:       16435452 kB
</screen>
    </para>
  </section>

</section>
