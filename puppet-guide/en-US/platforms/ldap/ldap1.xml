<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../puppet-guide.ent">
%BOOK_ENTITIES;
]>
<section id="platforms-ldap-ldap1">
  <title>LDAP 1 instance</title>

  <para>
    In the development environment we have depicted a
    network drawing, <xref
    linkend="environment-development-network" />, in which 2
    LDAP platforms are present.  We focus on the
    <emphasis>ldap1</emphasis> platform here.
  </para>

  <para>
    In order to get the <emphasis>ldap1</emphasis> service
    operational, we need to conduct the following tasks:
    <itemizedlist>
      <listitem>
        <para>
          Do bare metal deployment of the target nodes of
          the <emphasis>ldap1</emphasis> instance.
        </para>
      </listitem>
      <listitem>
        <para>
          Create the CA keypair (for SSL encryption of the
          LDAP connections) or obtain it from a password
          vault. Place it in
          <filename>depzones/dmsat1/platforms/ldap/ldap1.yaml</filename>,
          under <filename
          class="directory">/var/lib/hiera</filename>. The
          LDAP nodes of the <emphasis>ldap1</emphasis>
          instance must have access to it.
        </para>
      </listitem>
      <listitem>
        <para>
          Make the X.509 CA certificate from the CA keypair
          available in the
          <filename>depzones/dmsat1.yaml</filename> file,
          under the <filename
          class="directory">/var/lib/hiera</filename>
          directory. All nodes in the
          <emphasis>dmsat1</emphasis> deployment zone, must
          have access to it.
        </para>
      </listitem>
      <listitem>
        <para>
          Construct the <package>puppet-dmsat1</package> RPM
          package with all the YAML files needed for the
          Linux base infrastructure services in the
          <emphasis>dmsat1</emphasis> Deployment zone and
          make it available via the Spacewalk server in the
          <emphasis>example-puppet-structure-6u5-1_0</emphasis>
          software channel.
        </para>
      </listitem>
      <listitem>
        <para>
          Provision all 4 <emphasis>ldap1</emphasis> nodes
          via Puppet.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <!-- Bare metal deployment -->
  <para>
    For bare metal deployment, we need to provide
    information about the 4 nodes to the Cobbler system on
    the Spacewalk server, <systemitem
    class="systemname">d21sw1</systemitem>.
  </para>

  <para>
    In <xref linkend="software-test-kp-cobbler" />, we
    showed the Cobbler script for the <systemitem
    class="systemname">ds1</systemitem> system. We use it as
    a basis to create the other Cobbler scripts for placing
    the other 3 <emphasis>ldap1</emphasis> platform instance
    nodes to Cobbler.
<screen>
&sw1p; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/ds2/g' \</userinput>
<userinput>  -e 's/192\.168\.5\.14/192.168.5.15/g' \</userinput>
<userinput>  -e 's/DS 1 test node/DS 2 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:0f/g' \</userinput>
<userinput>     cobbler-ds1.sh &gt; cobbler-ds2.sh</userinput>
</screen>
  </para>

  <para>
<screen>
&sw1p; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/lvs1/g' \</userinput>
<userinput>  -e 's/192\.168\.5\.14/192.168.5.16/g' \</userinput>
<userinput>  -e 's/DS 1 test node/LVS 1 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:10/g' \</userinput>
<userinput>     cobbler-ds1.sh &gt; cobbler-lvs1.sh</userinput>
</screen>
  </para>

  <para>
<screen>
&sw1p; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/lvs2/g' \</userinput>
<userinput>  -e 's/192\.168\.5\.14/192.168.5.17/g' \</userinput>
<userinput>  -e 's/DS 1 test node/LVS 2 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:11/g' \</userinput>
<userinput>     cobbler-ds1.sh &gt; cobbler-lvs2.sh</userinput>
</screen>
  </para>

  <para>
    For the LDAP platform instance
    <emphasis>ldap1</emphasis>, we create a boot ISO. It is
    created with:
<screen>
&sw1p; <userinput>sudo cobbler buildiso --iso=/var/www/cobbler/pub/example/centos6u5-ldap1-kvm.iso --profiles="" --systems="SpacewalkDefaultOrganization_kvm_ds1,SpacewalkDefaultOrganization_kvm_ds2,SpacewalkDefaultOrganization_kvm_lvs1,SpacewalkDefaultOrganization_kvm_lvs2" --tempdir=/tmp</userinput>
&sw1p; <userinput>ls -lh /var/www/cobbler/pub/example/centos6u5-ldap1-kvm.iso</userinput>
-rw-r--r--. 1 root root 38008832 Jul  5 19:18 /var/www/cobbler/pub/example/centos6u5-ldap1-kvm.iso
</screen>
  </para>

  <para>
    The boot ISO needs to be copied to the KVM host:
<screen>
&sw1p; <userinput>scp /var/www/cobbler/pub/example/centos6u5-ldap1-kvm.iso root@192.168.5.1:/var/lib/libvirt/isos</userinput>
root@192.168.5.1's password: <userinput>redhat</userinput>
centos6u5-ldap1-kvm.iso                       100%   36MB  36.3MB/s   00:00
</screen>
  </para>

  <para>
    Installation on the machines is done with:
<screen>
&hostp; <userinput>cat install-ds1.sh</userinput>
#!/bin/bash

virt-install \
  --connect qemu:///system \
  --name=ds1 \
  --ram=512 \
  --arch=x86_64 \
  --description="DS 1 test node" \
  --cdrom /var/lib/libvirt/isos/centos6u5-ldap1-kvm.iso \
  --os-type=linux \
  --os-variant=rhel6 \
  --disk path=/dev/vg_vm/ds1,device=disk,bus=virtio \
  --network=network=svcs,mac=52:54:00:a8:05:0e \
  --graphics vnc \
  --hvm \
  --autostart
</screen>
  </para>

  <para>
    Adapting the script for the other 3 nodes:
<screen>
&hostp; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/ds2/g' \</userinput>
<userinput>  -e 's/DS 1 test node/DS 2 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:0f/g' \</userinput>
<userinput>     install-ds1.sh &gt; install-ds2.sh</userinput>
&hostp; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/lvs1/g' \</userinput>
<userinput>  -e 's/DS 1 test node/LVS 1 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:10/g' \</userinput>
<userinput>     install-ds1.sh &gt; install-lvs1.sh</userinput>
&hostp; <userinput>sed \</userinput>
<userinput>  -e 's/ds1/lvs2/g' \</userinput>
<userinput>  -e 's/DS 1 test node/LVS 2 test node/g' \</userinput>
<userinput>  -e 's/52:54:00:a8:05:0e/52:54:00:a8:05:11/g' \</userinput>
<userinput>     install-ds1.sh &gt; install-lvs2.sh</userinput>
</screen>
  </para>

  <para>
    Make sure all the scripts are executable and then start
    them all 4 as root on the host:
<screen>
&hostp; <userinput>chmod u+x install-*</userinput>
&hostp; <userinput>./install-ds1.sh</userinput>
&hostp; <userinput>./install-ds2.sh</userinput>
&hostp; <userinput>./install-lvs1.sh</userinput>
&hostp; <userinput>./install-lvs2.sh</userinput>
</screen>
  </para>

  <!-- CA keypair -->
  <para>
    In order for the LDAP connections to be encrypted, we
    need to create a CA (Certificate Authority) keypair. It
    is used in the LDAP module to generate server
    certificates for the LDAP nodes. The server certificates
    are signed with the private key of the CA keypair. Here,
    we show the steps needed to create such a CA keypair.
  </para>

  <para>
    We create a directory in which we keep the security
    databases. In there, we create the different files we
    need. The <command>certutil -N</command> command creates
    the actual databases.
<screen>
&t1p; <userinput>mkdir /tmp/cert</userinput>
&t1p; <userinput>cd /tmp/cert</userinput>
&t1p; <userinput>echo -e "redhat123\nredhat123" > /tmp/pwdfile</userinput>
&t1p; <userinput>certutil -N -d . -f /tmp/pwdfile</userinput>
&t1p; <userinput>ls</userinput>
cert8.db  key3.db  secmod.db
</screen>
  </para>

  <para>
    The actual creation of the keypair is done here. To
    speed up the process, we create a random seed file,
    called <filename>noise.txt</filename>. The
    <command>certutil -S</command> command is interactive.
    Some question need to be answered.
<screen>
&t1p; <userinput>echo "abadslkfjasdfwq398rq23laskmdv.as,fdlkasjdf2139847qw398aslfkdjasv.v,zlfckjasldf2o" &gt; noise.txt</userinput>
&t1p; <userinput>certutil -S -n "LDAP CA cert" -s "cn=LDAP CA cert,dc=dmsat1,dc=org" -c "cn=LDAP CA cert,dc=dmsat1,dc=org" -2 -x -t "CT,," -m 1000 -v 120 -d . -k rsa -g 2048 -f /tmp/pwdfile -z noise.txt</userinput>

Generating key.  This may take a few moments...

Is this a CA certificate [y/N]?
<userinput>y</userinput>
Enter the path length constraint, enter to skip [&lt;0 for unlimited path]: > 
Is this a critical extension [y/N]?
<userinput>y</userinput>
</screen>
  </para>

  <para>
    We check the result by using the list command
    <command>certutil -L</command>.
<screen>
&t1p; <userinput>certutil -d . -L</userinput>

Certificate Nickname                                         Trust Attributes
                                                             SSL,S/MIME,JAR/XPI

LDAP CA cert                                                 CTu,u,u
</screen>
  </para>

  <para>
    The CA keypair does not have any use to us if we keep it
    on this development node. Hence, we export to PEM
    (Privacy Enhanced Mail) format, which is in base64
    encoding. This file we can easily transport and store.
<screen>
&t1p; <userinput>pk12util -d . -o ca.p12 -n "LDAP CA cert" -w /tmp/pwdfile -k /tmp/pwdfile</userinput>
pk12util: PKCS12 EXPORT SUCCESSFUL
&t1p; <userinput>openssl pkcs12 -in ca.p12 -out ca.pem -passin file:/tmp/pwdfile -passout file:/tmp/pwdfile</userinput>
MAC verified OK
</screen>
  </para>

  <para>
    To verify the content of the CA keypair, we dump it to
    the terminal screen:
<screen>
&t1p; <userinput>cd /tmp/cert</userinput>
&t1p; <userinput>cat ca.pem</userinput>
Bag Attributes
    friendlyName: LDAP CA cert
    localKeyID: E4 73 5A 58 86 12 7B 20 76 AC 58 57 F1 97 99 85 51 BF 08 82 
Key Attributes: &lt;No Attributes&gt;
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIeTLi89J1mhQCAggA
MBQGCCqGSIb3DQMHBAid+8tZcnBn9ASCBMhGQyy6/x44Yrt1lfTOlXwWuxjYD0CC
7T+C53kitSEDZymw2ajhEC5Crr4AufGezfCgKa23N2tFY6rlydF2m6qabJyxDmqe
DKx6oScYemx5Lz80kC43DZ34YHH2OWfwBaRVDHdcm+UnXzVBPm+B2AgrfOAWGWqV
FrPbSP5ONNTjFL/A+cNoE4GayZF07vrbpQ8wvufov26rcqK56G8pTPTpplFRrnTB
sZxaILw/LWUlFOcve6kBdhw9gkhiQwuJiFVVrXduJi1S+kQmHucSiyzhgwAMF/9G
3I2QOJYlKb+TJ98cpx2ruq9eyfKdcf1x/wnck+zq4GLNMiS+9x8Xp4uCDMonnPmD
hgvMQtwgMPCtvzdzGoZwEkzO6b58Rh55DVJxPXq+1kkdOwA5ypqvDRd9TfXwbTmo
MAuDz2bKKiXu3fsB5nKdeFJxQYtTaYc9QBR/gmMWijbeKIDvF7SCWvP0lDdwgmFJ
c7rKNZmuWQt00/WouIeH14+UFyrrtjf/R0FEUWmyD9M8jLPOQNgk+HJXJTthuZgh
9lKF6DP7g2ovhqkf4asLmUq4oLPiqcBRGupqaJtV0YBuUP2jtn74+2hzrq6Pa8z5
aiT2P/62MvsgkWjIEYR0DPuVR4uqjJzOLclo2wjE5o6YhRFvZxAG5HDp7HdPkDSO
VFQUBw9g2+XNFFfKth6E18Y3nPd3cH2LMO7F2JuZOYi9k08QPTtu3Jy3cDxgXCJz
2v7OPKtKF92KGoZWLnTPE4p8vCTxudipU3WlzrNKpVm7diwX3x3ThcQmc1J+tX/r
hxKUwHtAVrgvO2sytcJg2HQT/Bk3fX8b630LxmvBxGv8NxR76IV5Ijyb0scn8qCP
eukkMJjx+wQC/IV7o4hSywVOj23qIMY+OJduD81Y6LZFKk7u673vMB6AiTGJjqOo
7Bh20qbCBTwVoGaQwEehKJlsDCqScGETsSilZGR9cpnvUub8ccYaV0LPavNxl9SL
bExe3kA2tSEnthMqvSwHTyMLo1WfrmsKJX3AMaSeNrCGvRQUzwsghE5o1nLYzHE6
7zNKL1uKfXzl5pGNQki0tPnTJTlnmNSXUq0gpx1JD38awpuTiXOj28lEOD+kg5vc
fIRo0tg/7DKLEz1XCip7XS0pV3YYBSA1LdJEDEGoB727LtQxRymv4w59/ZyY1g0Q
On/0OztDz4nZrki82+ifyLEYZvL7SYuVNT3LSAQSXVnhSnPq3LC14m14+w8lUBO8
TmNv1hudD5ZW3XcQiRfROrp55JYsBSUWgCudsePVnydbjvrbsOeL3I44QjpK6l41
7IaGccOzV8cib0JzJcSwjgTexThDERdRJgu9n1HtbxiaCEEihfcGgNkDB0BogGNa
SZ0n1xUy6WXy7FwjxOanpL3+1BHtHbN36SS8R36YGxq7VL/uBLhS1d3/7Xvfg+zM
ITjuvJGP24nosc4AUGlQ4hO9MRdzxJWSIiV3oDjgkbSP70sGX2siQUs2f1h9TMB2
41yAlay8EbuGB+AxiZhz3ZeTfwy0/f8V+YvDpHs3qhKKT5dIkmeGjefOwY2bha+X
p04Tzig2Ph23nIY33JVB7Em4nkgCJlcNuucstDwWDijTpvcy0zDaFhTU/id92MWb
ZC8=
-----END ENCRYPTED PRIVATE KEY-----
Bag Attributes
    friendlyName: LDAP CA cert
    localKeyID: E4 73 5A 58 86 12 7B 20 76 AC 58 57 F1 97 99 85 51 BF 08 82 
subject=/DC=org/DC=dmsat1/CN=LDAP CA cert
issuer=/DC=org/DC=dmsat1/CN=LDAP CA cert
-----BEGIN CERTIFICATE-----
MIIDFzCCAf+gAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRDETMBEGCgmSJomT8ixk
ARkWA29yZzEWMBQGCgmSJomT8ixkARkWBmRtc2F0MTEVMBMGA1UEAxMMTERBUCBD
QSBjZXJ0MB4XDTE0MDcwNjIwMjQzN1oXDTI0MDcwNjIwMjQzN1owRDETMBEGCgmS
JomT8ixkARkWA29yZzEWMBQGCgmSJomT8ixkARkWBmRtc2F0MTEVMBMGA1UEAxMM
TERBUCBDQSBjZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6pjG
rJGoC2WTmN+hu8d1LgiAvyV/PMCrg5lTQh6tfzHnUgyi3fYes7VG1uxIXhyXiJOM
gJD6D+fx5pndvZCQoMyMiUfP+UB4zrnQu1pQSVIlzX6MiR+dLKfFsjzU1REfmZX+
Mh2562JCj+x/6mR0lwqUyu+q+sDq/yjfwongXuTjJIINukwSveIQXt2h8Ck4gdX4
9I5oWpSGU2/pVpNelvb1VS4rHOm0Rrr9w1i/k8CNstaQv97I9SFhCJ3FxNul0WBZ
LH5x4qGIU0no4SCYbkcUEPeqnhbE/juHNBnBXO5nx6QxYIlCTs7OCyAPQ1DueOZi
0I7wtrAQK5VzfKPmhwIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3
DQEBBQUAA4IBAQAutpo3FmF+55JBIul8BNutDw67J85VYAEN0Tu1ZOmrirG4FRFl
/5nrB2u619IyO1ECFLk7MFmrDYO4uFILktow+1OcVdz30Pac/alztX49F0tc+2MI
9Sh28vQnbiaiTULpIrh0I8DwAdpm5euh6JRVMhJeIFxpiS83bbOlRsifYaE7qcI0
z9vT+IjhhiswdYDQdKnrAAXUi9ec460GetYc+1nyolLltY4XwwypAzCTdXiSFRJS
5oklmP+h8Hysfpb+Nn3PCQsS+m4wFAhJZQVGoU/bFbhbXUBBOp5/S3Kpyn74s/IP
f0IUocN5iAuzWMcJNEjJGUsoq2TVABDWnwa0
-----END CERTIFICATE-----
</screen>
  </para>

  <!-- X.509 CA certificate -->
  <para>
    The CA keypair is only usefull if clients can use the
    X.509 CA certificate part of it. Hence, we export it:
<screen>
&t1p; <userinput>certutil -d . -L -n 'LDAP CA cert' -a &gt; my-ca.crt</userinput>
</screen>
  </para>

  <para>
    Verification shows:
<screen>
&t1p; <userinput>cat my-ca.crt</userinput>
-----BEGIN CERTIFICATE-----
MIIDFzCCAf+gAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRDETMBEGCgmSJomT8ixk
ARkWA29yZzEWMBQGCgmSJomT8ixkARkWBmRtc2F0MTEVMBMGA1UEAxMMTERBUCBD
QSBjZXJ0MB4XDTE0MDcwNjIwMjQzN1oXDTI0MDcwNjIwMjQzN1owRDETMBEGCgmS
JomT8ixkARkWA29yZzEWMBQGCgmSJomT8ixkARkWBmRtc2F0MTEVMBMGA1UEAxMM
TERBUCBDQSBjZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6pjG
rJGoC2WTmN+hu8d1LgiAvyV/PMCrg5lTQh6tfzHnUgyi3fYes7VG1uxIXhyXiJOM
gJD6D+fx5pndvZCQoMyMiUfP+UB4zrnQu1pQSVIlzX6MiR+dLKfFsjzU1REfmZX+
Mh2562JCj+x/6mR0lwqUyu+q+sDq/yjfwongXuTjJIINukwSveIQXt2h8Ck4gdX4
9I5oWpSGU2/pVpNelvb1VS4rHOm0Rrr9w1i/k8CNstaQv97I9SFhCJ3FxNul0WBZ
LH5x4qGIU0no4SCYbkcUEPeqnhbE/juHNBnBXO5nx6QxYIlCTs7OCyAPQ1DueOZi
0I7wtrAQK5VzfKPmhwIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3
DQEBBQUAA4IBAQAutpo3FmF+55JBIul8BNutDw67J85VYAEN0Tu1ZOmrirG4FRFl
/5nrB2u619IyO1ECFLk7MFmrDYO4uFILktow+1OcVdz30Pac/alztX49F0tc+2MI
9Sh28vQnbiaiTULpIrh0I8DwAdpm5euh6JRVMhJeIFxpiS83bbOlRsifYaE7qcI0
z9vT+IjhhiswdYDQdKnrAAXUi9ec460GetYc+1nyolLltY4XwwypAzCTdXiSFRJS
5oklmP+h8Hysfpb+Nn3PCQsS+m4wFAhJZQVGoU/bFbhbXUBBOp5/S3Kpyn74s/IP
f0IUocN5iAuzWMcJNEjJGUsoq2TVABDWnwa0
-----END CERTIFICATE-----
</screen>
  </para>

  <!-- puppet-dmsat1 rpm -->
  <para>
    The contribution of the <emphasis>ldap1</emphasis>
    instance to the <package>puppet-dmsat1</package> RPM is
    a set of parameters, distributed over different YAML
    files. Each time the set of parameters is changed, we
    need to build a new version of the
    <package>puppet-dmsat1</package> RPM. This is also true
    if other platforms, or subzones, are added to the
    <emphasis>dmsat1</emphasis> Deployment zone.
  </para>

  <para>
    The contribution of <emphasis>ldap1</emphasis> to the
    influenced YAML fileset of <emphasis>dmsat1</emphasis>
    is depicted below.
<screen>
&t1p; <userinput>cd /root/puppet-dmsat1/puppet-dmsat1/var/lib/hiera/depzones</userinput>
&t1p; <userinput>tree --noreport --charset=ASCII</userinput>
.
|-- dmsat1
|   |-- hosts
|   |   |-- ds1.svcs.dmsat1.org.yaml  (node)
|   |   |-- ds2.svcs.dmsat1.org.yaml  (node)
|   |   |-- lvs1.svcs.dmsat1.org.yaml (node)
|   |   `-- lvs2.svcs.dmsat1.org.yaml (node)
|   `-- platforms
|       `-- ldap
|           `-- ldap1.yaml            (depzone platform instance)
`-- dmsat1.yaml                       (depzone)
</screen>
  </para>

  <para>
    The code of the <package>puppet-dmsat1</package> RPM can
    be found in <xref
    linkend="puppet-guide-ref_material-puppet-dmsat1" />.
    The RPM is built with:
<screen>
&t1p; <userinput>cd ~/puppet-dmsat1</userinput>
&t1p; <userinput>./build.sh</userinput>
.. output skipped ..
&t1p; <userinput>rpm --resign /root/rpm/RPMS/noarch/puppet-dmsat1-0.1.1-1.noarch.rpm</userinput>
Enter pass phrase: <userinput>redhat</userinput>
Pass phrase is good.
/root/rpm/RPMS/noarch/puppet-dmsat1-0.1.1-1.noarch.rpm:
&t1p; <userinput>scp /root/rpm/RPMS/noarch/puppet-dmsat1-0.1.1-1.noarch.rpm root@192.168.5.11:/tmp</userinput>
root@192.168.5.11's password: <userinput>redhat</userinput>
puppet-dmsat1-0.1.1-1.noarch.rpm              100% 8743     8.5KB/s   00:00
</screen>
  </para>

  <para>
<screen>
&sw1p; <userinput>cd /tmp</userinput>
&sw1p; <userinput>rhnpush -c example-puppet-structure-6u5-1_0 -u example -p redhat puppet-dmsat1-0.1.1-1.noarch.rpm</userinput>
.. no output is success ..
</screen>
  </para>

  <!-- Puppet node provisioning -->
  <table id="platforms-ldap-ldap1-items">
    <title>LDAP platform delivery items</title>
    <tgroup align="left" cols="2" colsep="1" rowsep="1">
      <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
      <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
      <thead valign="top">
        <row>
          <entry>Item</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody valign="top">
        <row>
          <entry>node</entry>
          <entry>
          </entry>
        </row>
        <row>
          <entry>depzone platform instance</entry>
          <entry>
          </entry>
        </row>
        <row>
          <entry>depzone platform</entry>
          <entry>
          </entry>
        </row>
        <row>
          <entry>depzone subzone</entry>
          <entry>
          </entry>
        </row>
        <row>
          <entry>depzone</entry>
          <entry>
            The following list of parameters need to be
            provides:
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis>ldap::params::capem</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::ldap_vip</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::ldap_vname</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::rhn_channel</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::root_dn_pwd</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::server_admin_pwd</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::servers</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>ldap::params::type</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::backup</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::nmask</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::primary</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::servers</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::vip</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>lvs::ldap::params::vmac</emphasis>
                </para>
              </listitem>
            </itemizedlist>
          </entry>
        </row>
        <row>
          <entry>platform instance</entry>
          <entry>Not applicable.</entry>
        </row>
        <row>
          <entry>platform</entry>
          <entry>Not applicable.</entry>
        </row>
        <row>
          <entry>base</entry>
          <entry>Not applicable.</entry>
        </row>
      </tbody>
    </tgroup>
  </table>


  <para>
    The parameter that we need, according to <xref
    linkend="puppet_configuration-layers-table" />, are:
  </para>

  <table id="platforms-ldap-ldap1-parameters">
    <title>LDAP Puppet/Hiera parameter layers</title>
    <tgroup align="left" cols="2" colsep="1" rowsep="1">
      <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
      <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
      <thead valign="top">
        <row>
          <entry>Parameter</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody valign="top">
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">node layer</emphasis></entry>
        </row>
        <row>
          <entry>instance</entry>
          <entry>ldap1</entry>
        </row>
        <row>
          <entry>platform</entry>
          <entry>ldap</entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">depzone platform instance layer</emphasis></entry>
        </row>
        <row>
          <entry>platform</entry>
          <entry>ldap</entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">depzone platform layer</emphasis></entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">depzone subzone layer</emphasis></entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">depzone layer</emphasis></entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">platform instance layer</emphasis></entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">platform layer</emphasis></entry>
        </row>
        <row>
          <entry namest="c1" nameend="c2"><emphasis
          role="strong">base layer</emphasis></entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <para>
    The <emphasis>ldap1</emphasis> LDAP instance provides
    the LDAP service for all the nodes in the deployment
    zone. An exception to this rule occurs if we have a
    security rule that forbids LDAP access in a particular
    subzone. For example, in the <emphasis>dmsat1</emphasis>
    deployment zone, we have a subzone called
    <emphasis>dmz</emphasis>. This zone has its own LDAP
    service.
  </para>

  <para>
    Since the <emphasis>ldap1</emphasis> LDAP instance
    provides the LDAP service for all nodes in a deployment
    zone, for example <emphasis>dmsat1</emphasis>, all nodes
    need to know how to contact the LDAP service. The
    contact point is the virtual hostname of the LDAP
    service, e.g.
    <systemitem>ds0.svcs.dmsat1.org</systemitem> in
    <emphasis>dmsat1</emphasis>. So, this parameter and also
    the CA (Certificate Authority) certificate, with which
    the LDAP server certificates are signed, need to be
    known by all nodes. To make the parameter set complete,
    all nodes also need to know the base search path within
    the DIT (Directory Information Tree).
  </para>

  <para>
    The parameters are placed in the deployment zone layer,
    <emphasis>depzone</emphasis>, see <xref
    linkend="puppet_configuration-layers-table" />. In the
    table below, the parameters are described. Why the
    parameters are named like they are, is explained in
    <xref linkend="puppet_configuration-hiera" /> and <xref
    linkend="apdx_annotated_module-ldap-params" />.
  </para>

  <table id="platforms-ldap-ldap1-depzone">
    <title>ldap1 deployment zone parameters</title>
    <tgroup align="left" cols="2" colsep="1" rowsep="1">
      <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
      <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
      <thead valign="top">
        <row>
          <entry>Parameter</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody valign="top">
        <row>
          <entry>ldap::params::cacert_value</entry>
          <entry>
            The base64 encoded X.509 CA certificate of the
            LDAP service.
          </entry>
        </row>
        <row>
          <entry>ldap::params::ldap_domain</entry>
          <entry>
            The LDAP domain is used as the root of the data
            of the DIT (Directory Information Tree) in the
            LDAP database. For example, if it is
            <emphasis>dmsat1.org</emphasis>, it is
            transformed to
            <emphasis>dc=dmsat1,dc=org</emphasis> in the
            configuration files.
          </entry>
        </row>
        <row>
          <entry>ldap::params::servers</entry>
          <entry>
            List of servers to connect to. Since we use load
            balancers, the list contains exactly one
            element.
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <para>
    An example set of parameters can be found in <xref
    linkend="puppet-guide-ref_material-puppet-baseinfra" />,
    in the documentation path, <filename
    class="directory">/usr/share/doc/puppet-baseinfra</filename>.
    Start with reading the <filename>README.ldap</filename>
    file.
  </para>

</section>
