<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "puppet-guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="software">
  <title>Puppet software channels in Spacewalk</title>

  <para>
    The software we need to provide the standard services in
    our infrastructure environment, is placed in software
    channels on the Spacewalk server. The set of channels is
    shown in the table:
    <table id="software-channels-table">
      <title>Spacewalk software channels</title>
      <tgroup align="left" cols="2" colsep="1" rowsep="1">
        <colspec colname="c1" colnum="1" colwidth="1*"></colspec>
        <colspec colname="c2" colnum="2" colwidth="1*"></colspec>
        <thead valign="top">
          <row>
            <entry>channel</entry>
            <entry>description</entry>
          </row>
        </thead>
        <tbody valign="top">
          <row>
            <entry>example-centos-6u5-1_0</entry>
            <entry>The base channel containing the CenOS 6u5
            RPM's</entry>
          </row>
          <row>
            <entry>example-con-tools-centos-6u5-1_0</entry>
            <entry>Channel containing tools to interact with
            the Spacewalk server</entry>
          </row>
          <row>
            <entry>example-epel-6u5-1_0</entry>
            <entry>Extra Packages for Enterprise Linux is a
            set of RPM's with all sorts of supporting
            software, e.g. the 389 Directory Server</entry>
          </row>
          <row>
            <entry>example-puppet-6u5-1_0</entry>
            <entry>The Puppet tools themselves</entry>
          </row>
          <row>
            <entry>example-puppet-deps-6u5-1_0</entry>
            <entry>RPM's to support the puppet tools.
            Basically software that is not in CentOS 6u5,
            but is needed to make Puppet run.</entry>
          </row>
          <row>
            <entry>example-puppet-software-6u5-1_0</entry>
            <entry>Our custom software additions to make
            Puppet run for us, e.g. the Puppet stdlib
            library, packaged in RPM</entry>
          </row>
          <row>
            <entry>example-puppet-tools-6u5-1_0</entry>
            <entry>Custom tools to use with our Puppet
            setup. For example, a tool to generate Cobbler
            script from node YAML (explained later)
            files</entry>
          </row>
          <row>
            <entry>example-puppet-construction-6u5-1_0</entry>
            <entry>RPM's containing our custom Puppet
            modules to provision systems. For example, the
            puppet-baseinfra set of modules</entry>
          </row>
          <row>
            <entry>example-puppet-integration-6u5-1_0</entry>
            <entry>RPM's containing our custom integration
            profiles and rols to bind the basic Puppet
            modules to parameter sets</entry>
          </row>
          <row>
            <entry>example-puppet-configuration-6u5-1_0</entry>
            <entry>RPM's containing custom parameter sets to
            make our custom Puppet module work. For example,
            the YAML files needed for the dmsat1 deployment
            zone are provide with the puppet-conf-dmsat1
            RPM</entry>
          </row>
          <row>
            <entry>example-spacewalk-proxy-6u5-1_0</entry>
            <entry></entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </para>

  <para>
    One might notice that all software channels start with
    the string <code>example-</code>. The base organization
    of the Spacewalk server is called
    <emphasis>example</emphasis>. With this naming
    convention, we want to indicate that these channels are
    cloned channels and managed from the
    <emphasis>example</emphasis> base organization. Clone
    channels oppose growing channels.  Growing channels are
    updated on a daily basis with new RPM's. Hence, they
    grow and may contain multiple versions of an RPM. The
    idea of the cloned channels is to keep the set of RPM's
    constant and controlled. I.e.  they are not
    automatically updated, but only manually for a reason.
    For example, if we encounter a bug which is solved in a
    later version of an RPM, we update it manually in the
    cloned channel.
  </para>

  <para>
    This chapter discusses how to setup software channels
    inside the Spacewalk server to use for Puppet
    deployments. To illustrate that we have the correct set
    of software, we create a bare Linux system. This is the
    basis on which we do our provisioning with Puppet.
  </para>

  <para>
    Tasks we need to conduct:
    <itemizedlist>
      <listitem>
        <para>
          Analyze the CentOS 6.5 channel. We want our
          systems to run on the CentOS 6.5 channel.
          Consequently, puppet also needs to run on CentOS
          6.5. But, what RPM's are already in CentOS 6.5 and
          might possibly conflict with Puppet software
          channels? Whenever possible, we give the CentOS
          6.5 channel preference.
        </para>
      </listitem>
      <listitem>
        <para>
          Construct a Spacewalk proxy software channel. The
          minimal set of Spacewalk software, coming from
          <ulink
          url="http://yum.spacewalkproject.org/2.1/RHEL/6/x86_64/">Yum
          Spacewalk for RHEL 6 x86_64</ulink>.
        </para>
      </listitem>
      <listitem>
        <para>
          Construct a puppet software channel. The minimal
          set of puppet software, coming from <ulink
          url="http://yum.puppetlabs.com/el/6.5/products/x86_64/">Puppet
          Labs, EL (Enterprise Linux) products for
          x86_64</ulink>.
        </para>
      </listitem>
      <listitem>
        <para>
          Construct a puppet supporting software channel.
          The supporting software is needed to run Puppet,
          for example, ruby-augeas is needed. The supporting
          software comes from <ulink
          url="http://yum.puppetlabs.com/el/6.5/dependencies/x86_64/">Puppet
          Labs, EL (Enterprise Linux) dependencies</ulink>.
          It is important here to check which RPM's are
          already present in the CentOS 6.5 channel. If they
          are already included, then we prefer to obtain them
          from the CentOS 6.5 channel, not from the
          supporting channel.
        </para>
      </listitem>
      <listitem>
        <para>
          Construct custom Puppet software channels, needed
          to support custom Puppet modules, system
          integration and configuration. In this channel we
          place our own code and configuration to provision
          systems with Puppet. We use the RPM mechanism to
          get this software on the Linux nodes. This means
          that we run Puppet in <emphasis
          role="bold">agentless</emphasis> mode.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <xi:include href="software/prerequisites.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
  <xi:include href="software/channels.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
  <xi:include href="software/test.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
</chapter>

